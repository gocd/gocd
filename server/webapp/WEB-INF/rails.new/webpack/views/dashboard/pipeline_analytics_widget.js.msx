/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m = require('mithril');

const PluginEndpoint           = require('rails-shared/plugin-endpoint');
const Modal                    = require('views/shared/new_modal');
const Routes                   = require('gen/js-routes');
const PluginiFrameWidget       = require('views/analytics/plugin_iframe_widget');
const Frame                    = require('models/analytics/frame');


function createModal(pluginId, metricId, pipeline) {
  PluginEndpoint.ensure();

  const model = new Frame(m.redraw);
  model.pluginId(pluginId);
  model.url(Routes.showAnalyticsPath(pluginId, "pipeline", metricId, {
    pipeline_name: pipeline.name,  // eslint-disable-line camelcase
    key: "analytics.pipeline-chart"
  }));
  const modal = new Modal({
    size: "small",
    title: `Analytics for Pipeline: ${pipeline.name}`,
    body: () => (m(PluginiFrameWidget, {model, pluginId, init: PluginEndpoint.init})),
    onclose: () => modal.destroy(),
    buttons: []
  });
  modal.render();
}

const PipelineAnalyticsWidget = {
  view: (vnode) => {
    return m("a", {
      class: "pipeline-analytics",
      onclick: function() { // eslint-disable-line object-shorthand
        createModal(vnode.attrs.pluginId, vnode.attrs.metricId, vnode.attrs.pipeline);
      }
    });
  }
};

module.exports = PipelineAnalyticsWidget;
