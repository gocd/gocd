/*
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

define(['mithril', 'lodash', 'jquery', 'string-plus', 'foundation.reveal'], function (m, _, $, s) {
  var init = function(uuid) {
    return function (elem, isInitialized) {
      if (!isInitialized) {
        new Foundation.Reveal($("#modal-" + uuid)); //eslint-disable-line no-undef
      }
    };
  };

  var Modal = function (options) {
    this.subView = options.subView;
    this.title   = options.title;
    this.uuid    = s.uuid();

    this.view = function () {
      var subViewArgs = _.merge({parentView: this}, this.subView.args);

      return (
        <div class='reveal scm-plugin-modal' id={"modal-" + this.uuid} data-reveal data-close-on-click='false' config={init(this.uuid)}>
          <h4 class='modal-title'>{this.title}</h4>
          <button class="close-button" onclick={this.close.bind(this)} aria-label="Close modal" type="button">
            <span aria-hidden="true">&times;</span>
          </button>
          {m.component(this.subView.component, subViewArgs)}
        </div>
      );
    };

    this.close = function () {
      $("#modal-" + this.uuid).foundation('close');
    };

    this.destroy = function () {
      if($("#modal-" + this.uuid).length > 0) {
        $("#modal-" + this.uuid).foundation('destroy').remove();
      }
    };

    this.open = function () {
      $("#modal-" + this.uuid).foundation('open');
    };

    this.onClose = function(callback) {
      $("#modal-" + this.uuid).on('closed.zf.reveal', callback);
    };
  };

  return Modal;
});
