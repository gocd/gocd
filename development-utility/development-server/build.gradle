/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'GoCD Server used for development'

configurations {
  copyOnly {
    transitive = false
  }
}

dependencies {
  compile project(':server')
  compile project(':api').subprojects
  compile project(':spark').subprojects
  compile group: 'org.eclipse.jetty', name: 'jetty-server', version: versions.jetty
  compile group: 'org.eclipse.jetty', name: 'jetty-plus', version: versions.jetty
  compile group: 'org.eclipse.jetty', name: 'jetty-jmx', version: versions.jetty
  compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: versions.jetty
  compile group: 'org.eclipse.jetty', name: 'jetty-util', version: versions.jetty
  compile group: 'org.eclipse.jetty', name: 'jetty-deploy', version: versions.jetty
  compile group: 'org.eclipse.jetty.websocket', name: 'websocket-server', version: versions.jetty

  compile(group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.http.server', version: project.versions.jgit) {
    exclude(module: 'jsch')
  }
  compile project(':jetty9')
  compile group: 'javax.servlet', name: 'javax.servlet-api', version: project.versions.servletApi
  compile group: 'org.jruby', name: 'jruby', version: project.versions.jruby
  compile(group: 'org.jruby.rack', name: 'jruby-rack', version: versions.rack) {
    exclude(module: 'jruby-complete')
  }
  compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: project.versions.bouncyCastle
  compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: project.versions.bouncyCastle
  compile group: 'org.slf4j', name: 'slf4j-api', version: project.versions.slf4j

  copyOnly project(path: ':tw-go-plugins', configuration: 'pluginsZipConfig')
  copyOnly project(':plugin-infra:go-plugin-activator')
}

def generatedResourcesOutput = file("resources-generated")

sourceSets {
  main {
    resources {
      output.dir generatedResourcesOutput, builtBy: 'generateResources'
      srcDirs += generatedResourcesOutput
    }
  }
}

clean {
  delete(generatedResourcesOutput)
}

task generateResources(type: Copy) {
  outputs.dir(generatedResourcesOutput)

  into generatedResourcesOutput
  from(project.configurations.copyOnly) {
    rename "(.*)-${project.version}.(jar|zip)", '$1.$2'
  }
}

task prepare {
  dependsOn generateResources
}
