import com.thoughtworks.go.build.DownloadFile
import com.thoughtworks.go.build.GithubArtifact
import com.thoughtworks.go.build.VerifyJarTask
import org.apache.commons.codec.digest.DigestUtils

/*
 * Copyright 2022 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configurations {
  pluginsZipConfig
}

def dependencies = [
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-ldap-authentication-plugin',
    tagName: 'v2.1.0-139',
    asset: 'gocd-ldap-authentication-plugin-2.1.0-139.jar',
    checksum: '4a1fb6fdd232612e4b8e46c095d6c6ec0abbb2ab8b7755cf9f9a7e7aad83132e'
  ),
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-filebased-authentication-plugin',
    tagName: 'v2.1.0-123',
    asset: 'gocd-filebased-authentication-plugin-2.1.0-123.jar',
    checksum: '8a873b1466c9f1f8a46cec4bac1431be4fcb27f3871dcfb699d61a0adc45e626'
  ),
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-yum-repository-poller-plugin',
    tagName: 'v2.0.5-92',
    asset: 'gocd-yum-repo-plugin-2.0.5-92.jar',
    checksum: '1e8accc81660cb2e49c4c1c423a8a4471fbf6ec0f0d56f86ffecaa666ccf9bf3'
  ),
  new GithubArtifact(
    user: 'tomzo',
    repo: 'gocd-yaml-config-plugin',
    tagName: '0.13.0',
    asset: 'yaml-config-plugin-0.13.0.jar',
    checksum: 'be113ca18b8fefdb20b04cd59ec9b56c4e877c0f2b017207690c1c32efd6d772'
  ),
  new GithubArtifact(
    user: 'tomzo',
    repo: 'gocd-json-config-plugin',
    tagName: '0.5.0',
    asset: 'json-config-plugin-0.5.0.jar',
    checksum: '645bffcc0ee20ab5689714e28bb81fd34043eb247f3621371f434b4349279a96'
  ),
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-file-based-secrets-plugin',
    tagName: 'v1.1.0-80',
    asset: 'gocd-file-based-secrets-plugin-1.1.0-80.jar',
    checksum: '41611dcceff2cb3c1923baac051a7993f055b3876edb3b3956282e47e0c2e359'
  )
]

task createVersionFile {
  def file = file("${project.buildDir}/version.txt")
  inputs.property('version', rootProject.version)
  inputs.property('gitRevision', rootProject.gitRevision)

  outputs.file file

  doLast {
    file.getParentFile().mkdirs()
    file.withWriter { out ->
      out.write("${rootProject.version} (${rootProject.gitRevision})")
    }
  }
}

task downloadPlugins {
}

task pluginsZip(type: Zip) {
  finalizedBy 'verifyPluginZip'

  archiveBaseName = 'plugins'
  dependsOn createVersionFile
  from(createVersionFile)

  from(dependencies.collect { dep -> destFile(dep) })
}

task verifyPluginZip(type: VerifyJarTask) {
  jarTask = pluginsZip

  expectedJars = [
    '/': dependencies.collect { dep -> "${dep.repo}.jar".toString() }
  ]
}

artifacts {
  pluginsZipConfig pluginsZip
}

dependencies.each { dep ->
  task "download-${dep.repo}"(type: DownloadFile) { downloadTask ->
    pluginsZip.dependsOn downloadTask
    downloadPlugins.dependsOn downloadTask
    downloadTask.src dep.downloadUrl
    downloadTask.dest destFile(dep)
    downloadTask.checksum dep.checksum
  }

  pluginsZip.from(destFile(dep))
}

private File destFile(GithubArtifact dep) {
  new File(gradle.gradleUserHomeDir, "download-cache/${DigestUtils.md5Hex(dep.downloadUrl)}/${dep.repo}.jar")
}

task prepare(dependsOn: pluginsZip)
