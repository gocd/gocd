/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m = require('mithril');
const _ = require('lodash');
const $ = require('jquery');

function selectionChange(model, attrName, event) {
  model[attrName]($(event.target).attr('data-prop-name'));
  toggleDropdown(model);
  event.preventDefault();
}

function toggleDropdown(model) {
  model.schemeDropDownOpen(!model.schemeDropDownOpen());
}

function hideOnBlur(elem, model) {
  if (!elem.contains(event.target)) {
    model.schemeDropDownOpen(false);
  }
}

function isChecked(model, attrName, option) {
  return model[attrName]() === option.id;
}

function displayStyle(model, attrName, option) {
  if (model.schemeDropDownOpen()) {
    return "";
  }
  if (isChecked(model, attrName, option)) {
    return "";
  }
  return "display: none;";
}

class Dropdown {

  oncreate(vnode) {
    window.addEventListener('click', hideOnBlur.bind(this, vnode.dom, vnode.attrs.model));
  }

  onremove(vnode) {
    window.removeEventListener('click', hideOnBlur.bind(this, vnode.dom, vnode.attrs.model));
  }

  view(vnode) {
    const label    = vnode.attrs.label;
    const options  = vnode.attrs.items;
    const model    = vnode.attrs.model;
    const attrName = vnode.attrs.attrName;

    const optionsHtml = _.map(options, (option) => {
      return <label style={displayStyle(model, attrName, option)}>
        <input autoComplete="off" autoCapitalize="off" autoCorrect="off" spellCheck="false" type="radio"
               name="grouping-scheme" data-prop-name={option.id} class="dropdown_radio"
               onclick={selectionChange.bind(this, model, attrName)}
               checked={isChecked(model, attrName, option)}/><span>{option.text}</span>
      </label>;
    });

    return <section className="dashboard-modifiers">
      <div className="groupby">
        <span className="edit-dropdown-text">{label}</span>
        <radiogroup className="group-mode">
          <i className="down-arrow" onClick={toggleDropdown.bind(this, model)}/>
          {optionsHtml}
        </radiogroup>
      </div>
    </section>;
  }
}

module.exports = Dropdown;
