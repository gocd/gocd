<% scope[:show_controls] ||= false
   scope[:should_display_previously_blurb] ||= false
   scope[:show_changes] ||= false
   scope[:pipeline_name] = scope[:pipeline_model].getName() -%>
<div class="pipeline_header">
    <%
        h3_class = ""
        if scope[:pipeline_model].hasNewRevisions() && !scope[:show_changes]
            h3_class = " has_new_materials"
        end
    %>
    <div class="pipeline_actions">
        <%= render :partial => "pipelines/pipeline_locking_blurb.html.erb", :locals => {:scope => {:pipeline_model => scope[:pipeline_model]}} %>
        <%- if scope[:pipeline_model].canAdminister() -%>
          <% if is_pipeline_config_spa_enabled? && is_quick_edit_page_default? %>
              <%= link_to "", edit_admin_pipeline_config_path(:pipeline_name => scope[:pipeline_name]), :class => 'icon16 setting' %>
          <% else %>
              <%= link_to "", pipeline_edit_path(:pipeline_name => scope[:pipeline_name], :current_tab => "general"), :class => 'icon16 setting' %>
          <% end %>
        <%- end -%>
    </div>
    <div class="pipeline_name_link">
        <h3 class="title entity_title<%= h3_class %> ">
            <%= link_to(scope[:pipeline_name], url_for_pipeline(scope[:pipeline_name])) %>
        </h3>
    </div>
</div>

<div class="alert" id="trigger-result-<%= scope[:pipeline_name] -%>"></div>

<% scope[:pipeline_model].getActivePipelineInstances().each do |active_pipeline_in_pipeline| -%>
    <div class="pipeline_instance">
        <% if !active_pipeline_in_pipeline.hasHistoricalData() %>
            <div class='status'>
                <span class='message'>
                  No historical data
                </span>
            </div>
        <% else %>
            <div class='status details'>
                <%= render :partial=> 'pipelines/pipeline_label.html', :locals => {:scope =>{:active_pipeline_in_pipeline => active_pipeline_in_pipeline}} %>

                <% if scope[:show_compare] %>
                <span class="compare_pipeline dashboard" >
                    <%= link_to("#{l.string("COMPARE")}",
                                    compare_pipelines_path(:pipeline_name => scope[:pipeline_name], :from_counter => active_pipeline_in_pipeline.getCounter() - 1, :to_counter => active_pipeline_in_pipeline.getCounter()),
                                    :title => l.string("TOOLTIP_COMPARE_WITH_PREVIOUS"))
                    %>
                </span>
                <% end %>

                <% if scope[:show_changes] && !(scope[:revisions] = active_pipeline_in_pipeline.getCurrentRevisions()).empty?
                    scope[:instance_identifier] = pipeline_instance_identifier(active_pipeline_in_pipeline)
                    scope[:changes_id] = pipeline_build_cause_popup_id(active_pipeline_in_pipeline)
                    scope[:show_changes_id] ="show_changes_#{scope[:instance_identifier]}"
                -%>
                    <% if scope[:show_compare] %>
                        <span class="separator">&nbsp;</span>
                    <% end %>

                    <span class="changes_button_wrapper">
                        <%= link_to(l.string("CHANGES"), build_cause_path(:pipeline_name => active_pipeline_in_pipeline.getName(), :pipeline_counter => active_pipeline_in_pipeline.getCounter()), :id => scope[:show_changes_id], :class => "show_panel submit_small dashboard_build_cause_button") -%>
                    </span>

                <% end -%>
                <%= render :partial=> 'pipelines/pipeline_instance_details.html', :locals => {:scope =>{:active_pipeline_in_pipeline => active_pipeline_in_pipeline}} %>
            </div>
            <%= render :partial=> 'pipelines/previously_blurb.html', :locals => {:scope =>{:active_pipeline_in_pipeline => active_pipeline_in_pipeline, :should_display_previously_blurb =>  scope[:should_display_previously_blurb]}} %>
        <% end -%>
    </div>
<% end -%>

<div class="pipeline_operations">
    <% if scope[:show_controls] && scope[:pipeline_model].canOperate() -%>
        <% scope[:trigger_label] = l.string('TRIGGER')
           scope[:trigger_with_option_label] = l.string('TRIGGER_WITH_OPTIONS')
        -%>
        <%= render :partial=>"shared/trigger_pipeline.html", :locals => {:scope => {:pipeline_model=> scope[:pipeline_model], :label=>"#{scope[:trigger_label]}"}} -%>

        <%= render :partial=>"shared/trigger_pipeline_with_options.html", :locals => {:scope => {:pipeline => scope[:pipeline_model].getLatestPipelineInstance(),
                                                                                                 :label => "#{scope[:trigger_with_option_label]}",
                                                                                                 :can_trigger => scope[:pipeline_model].canForce(),
                                                                                                 :has_upstream_material => false}} %>
        <%= render :partial => "shared/pause_control.html", :locals => {:scope => {:pause_info => scope[:pipeline_model].getPausedInfo(), :pipeline_name => scope[:pipeline_name]}} -%>
    <% end -%>
</div>
<%= render :partial => "shared/pause_info.html", :locals => {:scope => {:pause_info => scope[:pipeline_model].getPausedInfo()}} -%>
