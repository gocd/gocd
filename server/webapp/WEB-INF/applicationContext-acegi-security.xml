<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2015 ThoughtWorks, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
       default-init-method="init">

    <context:annotation-config/>
    <context:component-scan base-package="com.thoughtworks.go.server.security"/>

    <!--enable Spring support for configuring Spring AOP based on @AspectJ aspects-->
    <aop:aspectj-autoproxy/>

    <!-- This bean name 'filterChainProxy' is referenced in web.xml -->
    <bean id="filterChainProxy" class="org.springframework.security.util.FilterChainProxy">
        <property name="filterInvocationDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /api/config-repository.git/**=performanceLoggingFilter,modeAwareFilter,httpSessionContextIntegrationFilter,apiSessionFilter,removeAdminPermissionFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor

                /rails/cas_errors/**=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,anonymousProcessingFilter,flashLoader,urlRewriter
                /remoting/**=performanceLoggingFilter,modeAwareFilter,artifactSizeEnforcementFilter,i18nlocaleResolver,x509ProcessingFilter,x509AccessDenied,agentRemotingFilterInvocationInterceptor,flashLoader,urlRewriter
                /agent-websocket/**=performanceLoggingFilter,modeAwareFilter,artifactSizeEnforcementFilter,i18nlocaleResolver,x509ProcessingFilter,x509AccessDenied,agentRemotingFilterInvocationInterceptor
                /api/feeds/**=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,apiSessionFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor,flashLoader,urlRewriter
                /api/pipelines.xml=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,apiSessionFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor,flashLoader,urlRewriter
                /api/*/*.xml=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,apiSessionFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor,flashLoader,urlRewriter
                /api/pipelines/*/*.xml=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,apiSessionFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor,flashLoader,urlRewriter

                /gadgets/**=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor,flashLoader,urlRewriter

                /cctray.xml=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,apiSessionFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor,flashLoader,urlRewriter
                /api/**=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,apiSessionFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,basicAuthenticationAccessDenied,filterInvocationInterceptor,flashLoader,urlRewriter
                /files/**=performanceLoggingFilter,modeAwareFilter,artifactSizeEnforcementFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,cruiseLoginOrBasicAuthentication,filterInvocationInterceptor,flashLoader,urlRewriter
                /**=performanceLoggingFilter,modeAwareFilter,i18nlocaleResolver,httpSessionContextIntegrationFilter,goLogoutFilter,removeAdminPermissionFilter,casAuthProcessingFilter,oauthProcessingFilter,basicProcessingFilter,authenticationProcessingFilter,userEnabledCheckFilter,anonymousProcessingFilter,cruiseLoginOrBasicAuthentication,filterInvocationInterceptor,flashLoader,urlRewriter
            </value>
        </property>
    </bean>

    <bean id="urlRewriter" class="org.tuckey.web.filters.urlrewrite.UrlRewriteFilter" autowire="autodetect"/>
    <bean id="flashLoader" class="com.thoughtworks.go.server.web.FlashLoadingFilter" autowire="autodetect"/>
    <bean id="artifactSizeEnforcementFilter" class="com.thoughtworks.go.server.security.ArtifactSizeEnforcementFilter" autowire="autodetect"/>

    <bean id="i18nlocaleResolver" class="com.thoughtworks.go.server.web.i18n.LocaleResolver" autowire="autodetect"/>

    <bean id="apiSessionFilter" class="com.thoughtworks.go.server.web.ApiSessionFilter"/>

    <bean id="anonymousProcessingFilter" class="com.thoughtworks.go.server.security.AnonymousProcessingFilter" autowire="autodetect"/>
    <bean id="modeAwareFilter" class="com.thoughtworks.go.server.security.ModeAwareFilter" autowire="autodetect"/>
    <bean id="performanceLoggingFilter" class="com.thoughtworks.go.server.security.PerformanceLoggingFilter" >
        <constructor-arg ref="webRequestPerformanceLogger"/>
    </bean>

    <bean id="httpSessionContextIntegrationFilter"
          class="org.springframework.security.context.HttpSessionContextIntegrationFilter"/>

    <bean id="defaultLogoutHandler" class="org.springframework.security.ui.logout.SecurityContextLogoutHandler" />

    <bean id="goLogoutFilter" class="com.thoughtworks.go.server.security.GoLogoutFilter">
        <!-- URL redirected to after logout -->
        <constructor-arg ref="securityService"/>
        <constructor-arg value="/auth/logout"/>
        <constructor-arg>
            <list>
                <ref bean="defaultLogoutHandler" />
            </list>
        </constructor-arg>
    </bean>

    <bean id="authenticationProcessingFilter" class="com.thoughtworks.go.server.security.AuthenticationProcessingFilter"
          p:authenticationManager-ref="goAuthenticationManager"
          p:authenticationFailureUrl="/auth/login?login_error=1"
          p:defaultTargetUrl="/"
          p:filterProcessesUrl="/auth/security_check"/>

     <bean id="userEnabledCheckFilter" class="com.thoughtworks.go.server.security.UserEnabledCheckFilter">
         <constructor-arg index="0">
            <bean class="com.thoughtworks.go.server.service.UserService" autowire="autodetect"/>
        </constructor-arg>
     </bean>

    <bean id="goAuthenticationProviderFactory" class="com.thoughtworks.go.server.security.providers.GoAuthenticationProviderFactory">
        <constructor-arg index="0">
            <bean class="com.thoughtworks.go.server.service.UserService" autowire="autodetect"/>
        </constructor-arg>
    </bean>

    <bean id="goAuthenticationManager" class="org.springframework.security.providers.ProviderManager">
        <property name="providers">
            <list>
                <bean factory-bean="goAuthenticationProviderFactory" factory-method="setProvider">
                    <constructor-arg index="0">
                        <bean class="com.thoughtworks.go.server.security.providers.OauthAuthenticationProvider" autowire="autodetect"/>
                    </constructor-arg>
                </bean>
                <bean factory-bean="goAuthenticationProviderFactory" factory-method="setProvider">
                    <constructor-arg index="0">
                        <bean class="com.thoughtworks.go.server.security.providers.FileAuthenticationProvider" autowire="autodetect"/>
                    </constructor-arg>
                </bean>
                <bean factory-bean="goAuthenticationProviderFactory" factory-method="setProvider">
                    <constructor-arg index="0" ref="ldapAuthProvider"/>
                </bean>
                <bean factory-bean="goAuthenticationProviderFactory" factory-method="setProvider">
                    <constructor-arg index="0">
                        <bean class="com.thoughtworks.go.server.security.providers.PluginAuthenticationProvider" autowire="autodetect"/>
                    </constructor-arg>
                </bean>
                <bean class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider" p:key="anonymousKey"/>
            </list>
        </property>
    </bean>

    <bean id="basicProcessingFilter" class="com.thoughtworks.go.server.security.BasicAuthenticationFilter">
        <property name="authenticationManager">
            <ref bean="goAuthenticationManager"/>
        </property>
        <property name="authenticationEntryPoint" ref="basicProcessingFilterEntryPoint" />
    </bean>

    <bean id="oauthProcessingFilter" class="com.thoughtworks.go.server.security.OauthAuthenticationFilter">
        <constructor-arg>
            <ref bean="goAuthenticationManager"/>
        </constructor-arg>
    </bean>

    <!-- Begin CAS Stuff -->
    <bean id="casAuthProcessingFilter" class="com.thoughtworks.go.server.security.CasProcessingFilter">
        <property name="defaultTargetUrl" value="/"/>
        <property name="filterProcessesUrl" value="/j_spring_cas_security_check" />
        <property name="authenticationManager" ref="goAuthenticationManager"/>
    </bean>

    <bean id="serviceProperties" class="com.thoughtworks.go.server.security.GoCasServiceProperties">
        <constructor-arg ref="securityService" />
        <constructor-arg value="/j_spring_cas_security_check"/>
    </bean>
    <!-- End CAS Stuff -->

    <bean id="removeAdminPermissionFilter" class="com.thoughtworks.go.server.security.RemoveAdminPermissionFilter" autowire="autodetect"/>

    <bean id="x509ProcessingFilter" class="org.springframework.security.ui.x509.X509ProcessingFilter">
        <property name="authenticationManager">
            <bean id="x509AuthenticationManager" class="org.springframework.security.providers.ProviderManager">
                <property name="providers">
                    <list>
                        <bean id="x509AuthenticationProvider" class="org.springframework.security.providers.x509.X509AuthenticationProvider">
                            <property name="x509AuthoritiesPopulator">
                                <bean class="com.thoughtworks.go.server.security.X509AuthoritiesPopulator">
                                    <constructor-arg value="ROLE_AGENT"/>
                                </bean>
                            </property>
                            <property name="x509UserCache">
                                <bean class="org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache">
                                    <property name="cache" ref="userCache">
                                    </property>
                                </bean>
                            </property>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="userCache" factory-bean="userCacheFactory" factory-method="createCache" autowire-candidate="false"/>

    <bean id="ldapAuthProvider" class="com.thoughtworks.go.server.security.providers.LdapAuthenticationProvider">
        <constructor-arg>
            <bean class="com.thoughtworks.go.server.security.LdapAuthenticator"/>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.thoughtworks.go.server.security.GoLdapAuthoritiesPopulator"/>
        </constructor-arg>
    </bean>

    <bean class="org.springframework.security.vote.AffirmativeBased" id="accessDecisionManager">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.vote.RoleVoter"/>
            </list>
        </property>
    </bean>

    <bean id="agentRemotingFilterInvocationInterceptor"
          class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="goAuthenticationManager"/>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value><![CDATA[
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /remoting/**=ROLE_AGENT
                /agent-websocket/**=ROLE_AGENT
            ]]></value>
        </property>
    </bean>

    <bean id="filterInvocationInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="goAuthenticationManager"/>
        <property name="accessDecisionManager">
            <bean class="org.springframework.security.vote.AffirmativeBased">
                <property name="allowIfAllAbstainDecisions" value="false"/>
                <property name="decisionVoters">
                    <list>
                        <bean class="com.thoughtworks.go.server.security.IsSecurityEnabledVoter" autowire="autodetect"/>
                        <bean class="org.springframework.security.vote.RoleVoter"/>
                        <bean class="org.springframework.security.vote.AuthenticatedVoter"/>
                    </list>
                </property>
            </bean>
        </property>
        <property name="objectDefinitionSource">
            <value><![CDATA[
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /auth/login=IS_AUTHENTICATED_ANONYMOUSLY
                /auth/logout=IS_AUTHENTICATED_ANONYMOUSLY
                /auth/security_check=IS_AUTHENTICATED_ANONYMOUSLY
                /compressed/*=IS_AUTHENTICATED_ANONYMOUSLY
                /assets/**=IS_AUTHENTICATED_ANONYMOUSLY
                /images/cruise.ico=IS_AUTHENTICATED_ANONYMOUSLY
                /admin/agent=IS_AUTHENTICATED_ANONYMOUSLY
                /admin/latest-agent.status=IS_AUTHENTICATED_ANONYMOUSLY
                /admin/agent-launcher.jar=IS_AUTHENTICATED_ANONYMOUSLY
                /admin/agent-plugins.zip=IS_AUTHENTICATED_ANONYMOUSLY
                /admin/configuration/file/**=ROLE_SUPERVISOR
                /admin/configuration/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/restful/configuration/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/pipelines/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/pipeline_group/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/templates/**=ROLE_SUPERVISOR,ROLE_TEMPLATE_SUPERVISOR
                /admin/commands/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR, ROLE_TEMPLATE_SUPERVISOR
                /admin/plugins=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/pipeline/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/materials/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/package_repositories/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /admin/package_definitions/**=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /api/admin/material_test=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /api/admin/internal/pipelines=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /api/admin/internal/resources=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /api/admin/internal/environments=ROLE_SUPERVISOR
                /api/admin/pipelines=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /api/admin/pipelines/*=ROLE_SUPERVISOR,ROLE_GROUP_SUPERVISOR
                /api/admin/scms/**=ROLE_SUPERVISOR, ROLE_GROUP_SUPERVISOR
                /api/admin/plugin_info/**=ROLE_SUPERVISOR, ROLE_GROUP_SUPERVISOR
                /api/admin/agents=ROLE_SUPERVISOR
                /api/admin/**=ROLE_SUPERVISOR
                /api/config-repository.git/**=ROLE_SUPERVISOR
                /api/jobs/scheduled.xml=ROLE_SUPERVISOR
                /admin/**=ROLE_SUPERVISOR
                /**/addresources.json=ROLE_SUPERVISOR
                /**/registeragent.json=ROLE_SUPERVISOR
                /api/feeds/**=ROLE_SUPERVISOR
                /api/support=ROLE_SUPERVISOR
                /api/pipelines.xml=ROLE_USER
                /api/version=IS_AUTHENTICATED_ANONYMOUSLY
                /api/*/*.xml=ROLE_USER
                /api/pipelines/*/*.xml=ROLE_USER,ROLE_OAUTH_USER
                /api/agents/**=ROLE_USER
                /api/users/**=ROLE_USER
                /api/material_test/**=ROLE_USER
                /api/version_infos/**=ROLE_USER
                /*/environments/*=ROLE_SUPERVISOR

                /oauth/admin/**=ROLE_SUPERVISOR

                /oauth/token=IS_AUTHENTICATED_ANONYMOUSLY
                /oauth/authorize=ROLE_USER
                /oauth/user_tokens=ROLE_USER
                /oauth/user_tokens/revoke/**=ROLE_USER

                /gadgets/pipeline.xml=IS_AUTHENTICATED_ANONYMOUSLY
                /gadgets/pipeline/**=ROLE_OAUTH_USER,ROLE_USER
                /gadgets/remote_materials.xml=IS_AUTHENTICATED_ANONYMOUSLY
                /gadgets/remote_materials/**=ROLE_OAUTH_USER,ROLE_USER

                /plugin/interact/**=IS_AUTHENTICATED_ANONYMOUSLY

                /agents/*/job_run_history*=ROLE_SUPERVISOR
                /agents/*/job_run_history/*=ROLE_SUPERVISOR
                /config_view/templates/*=ROLE_GROUP_SUPERVISOR, ROLE_SUPERVISOR
                /add-on/*/admin/**=ROLE_SUPERVISOR
                /add-on/*/api/**=ROLE_OAUTH_USER
                /**=ROLE_USER
            ]]></value>
        </property>
    </bean>

    <!--
     This filter is used for normal pages through the UI.
     It will redirect to the login page.
    -->
    <bean id="cruiseLoginOrBasicAuthentication" class="com.thoughtworks.go.server.security.GoExceptionTranslationFilter">
        <property name="securityService" ref="securityService" />
        <property name="basicAuthenticationEntryPoint" ref="basicProcessingFilterEntryPoint"/>

        <property name="authenticationEntryPoint">
            <bean class="com.thoughtworks.go.server.security.SessionDenialAwareAuthenticationProcessingFilterEntryPoint">
                <property name="loginFormUrl" value="/auth/login"/>
                <property name="deniedSessionLoginFormUrl" value="/auth/login?login_error=1"/>
                <property name="forceHttps" value="false"/>
            </bean>
        </property>
        <property name="accessDeniedHandler">
            <bean class="org.springframework.security.ui.AccessDeniedHandlerImpl" />
        </property>
        <property name="urlPatternsThatShouldNotBeRedirectedToAfterLogin" value="(\.json)|(\?.*format=json)|(/images/)|(\.css)|(\.ico)|(\.js)|(/auth/login)|(/auth/logout)"/>
    </bean>


    <!--
     This filter is used for Agent communication only
     It returns a 401 if access is denied
    -->
    <bean id="x509AccessDenied"
          class="org.springframework.security.ui.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint">
            <bean class="org.springframework.security.ui.x509.X509ProcessingFilterEntryPoint"/>
        </property>
        <property name="accessDeniedHandler">
            <bean class="org.springframework.security.ui.AccessDeniedHandlerImpl"/>
        </property>
    </bean>

    <!--
     This filter returns 401 if basic auth failed, rather than redirecting to the login page.
     This is used for CCTRAY feed (and should be used for other xml / rss style feeds so that
     clients can automatically negotiate security
    -->
    <bean id="basicAuthenticationAccessDenied"
          class="org.springframework.security.ui.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint" ref="basicProcessingFilterEntryPoint"/>
        <property name="accessDeniedHandler">
            <bean class="org.springframework.security.ui.AccessDeniedHandlerImpl"/>
        </property>
    </bean>

    <bean id="basicProcessingFilterEntryPoint"
          class="com.thoughtworks.go.server.security.BasicProcessingFilterEntryPoint">
    </bean>

</beans>
