/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var m      = require('mithril');
var Stream = require('mithril/stream');
var f      = require('helpers/form_helper');
var _      = require('lodash');

var StageSettingsWidget = {
  view: function (vnode) {
    let plainTextVariables = _.map(vnode.attrs.stage().environmentVariables().plainVariables(), function (envVar) {
      return {key: 'value', displayKey: envVar.name(), modal: Stream(envVar)};
    });

    let secureTextVariables = _.map(vnode.attrs.stage().environmentVariables().secureVariables(), function (envVar) {
      return {
        key:        'value',
        displayKey: envVar.name(),
        modal:      Stream(envVar),
        renderer:   (value) => _.repeat('*', value.length)
      };
    });

    let allVariables = plainTextVariables.concat(secureTextVariables);

    let variablesList;

    if (allVariables.length) {
      variablesList = (
        <f.row>
          <f.KVPairs keys={allVariables}/>
        </f.row>
      );
    } else {
      variablesList = (
        <f.emptyMessage message="No Environment Variables have been configured."/>
      );
    }

    return (
      <div>
        <f.row>
          <f.readOnlyHeading value="Environment Variables:"/>
        </f.row>
        {variablesList}
      </div>
    );
  }
};

module.exports = StageSettingsWidget;
