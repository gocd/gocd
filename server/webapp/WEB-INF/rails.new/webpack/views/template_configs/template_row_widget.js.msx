/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


const m               = require('mithril');
const Stream          = require('mithril/stream');
const _               = require('lodash');
const f               = require('helpers/form_helper');
const ComponentMixins = require('helpers/mithril_component_mixins');

const Routes = require('gen/js-routes');

const TemplateRowWidget = {
  oninit (vnode) {
    const self = this;
    ComponentMixins.HasViewModel.call(this);

    const vmStateKey = `show-${  vnode.attrs.template.name()}`;
    self.vmState(vmStateKey, Stream(false));

    self.showTemplate = function () {
      m.route.set(`/${  vnode.attrs.template.name()}`);
    };

    self.toggleHide = function () {
      self.vmState(vmStateKey)(!self.vmState(vmStateKey)());
    };

    self.showState = function () {
      return self.vmState(vmStateKey)() ? 'show' : 'hide';
    };
  },

  view (vnode) {
    const toggleDeleteAllowed = (vnode.attrs.isUserAdmin && vnode.attrs.template.pipelines().length === 0) ? '' : 'disabled';

    let pipelinesList = (
      <f.info>No pipelines are associated with this template</f.info>
    );

    if (vnode.attrs.template.pipelines().length !== 0) {
      pipelinesList = (
        <div class="pipeline-list">
          {_.map(vnode.attrs.template.pipelines(), (pipeline) => {
            return [
              (<div>
                <a href={
                  Routes.editAdminPipelineConfigPath({pipeline_name: pipeline.name()}) //eslint-disable-line camelcase
                }>{pipeline.name()}</a>
              </div>),
            ];
          })}
        </div>
      );
    }

    return (
      <div class="exp-col-panel">
        <div id="template-link-header" class="exp-col-header" onclick={vnode.state.toggleHide.bind(vnode.state)}>
          {vnode.attrs.template.name()}
        </div>
        <div class={`exp-col-body ${  vnode.state.showState()}`}>
          {pipelinesList}
        </div>
        <div class="template-actions">
          <f.link class={'edit-template'}
                  onclick={vnode.state.showTemplate.bind(vnode.state)}/>
          <f.link class={`delete-template-confirm ${  toggleDeleteAllowed}`}
                  onclick={vnode.attrs.deleteConfirm.bind(vnode.state, vnode.attrs.template)}/>
        </div>
      </div>
    );
  }
};

module.exports = TemplateRowWidget;
