/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var m               = require('mithril');
var f               = require('helpers/form_helper');
var Stream          = require('mithril/stream');
var ComponentMixins = require('helpers/mithril_component_mixins');
var Template        = require('models/pipeline_configs/template');

var ReadOnlyTemplateWidget = {
  oninit: function (vnode) {
    var self      = this;
    self.template = Stream(Template.fromJSON({}));

    Template.find(vnode.attrs.templateName).then(self.template);

    ComponentMixins.HasViewModel.call(self);
  },

  view: function (vnode) {
    var template = vnode.state.template();
    return (
      <f.accordion accordionTitles={[(<span>Template</span>)]}
                   accordionKeys={['template']}
                   selectedIndex={vnode.state.vmState('templateSelected', Stream(0))}
                   class='template'>
        <div>
          <div>
            name: { template.name()}
          </div>
          <f.accordion accordionTitles={[(<span>Stages</span>)]}
                       selectedIndex={vnode.state.vmState('pipelineFlowSelected', Stream(0))}
                       accordionKeys={['stages']}
                       class='stages'>
            <div>
              <div class="stage-boxes">
                these are stages
              </div>
            </div>
          </f.accordion>
        </div>
      </f.accordion>
    );
  }
};

module.exports = ReadOnlyTemplateWidget;
