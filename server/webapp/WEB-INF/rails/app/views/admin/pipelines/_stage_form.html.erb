<%= scope[:form].fields_for(:pipeline, scope[:pipeline]) do |p_f| %>
    <div class="fieldset">
        <div class="form_item">
            <%= render :partial => "wizard_step_title.html", :locals => { :scope => {:step => scope[:step], :title => scope[:title]}} %>
        </div>
        <div class="form_item checkbox_row define_or_template">
            <label><%= l.string("CONFIGURATION_TYPE") %></label>
            <%= p_f.radio_button com.thoughtworks.go.config.PipelineConfig::CONFIGURATION_TYPE, com.thoughtworks.go.config.PipelineConfig::CONFIGURATION_TYPE_STAGES, :id => "pipeline_configurationType_stages", :title => l.string("DEFINE_STAGES") %>
            <%= label_tag("pipeline_configurationType_stages", l.string("DEFINE_STAGES")) -%>
            <%= p_f.radio_button com.thoughtworks.go.config.PipelineConfig::CONFIGURATION_TYPE, com.thoughtworks.go.config.PipelineConfig::CONFIGURATION_TYPE_TEMPLATE, :id => "pipeline_configurationType_template", :title => l.string("USE_TEMPLATE") %>
            <%= label_tag("pipeline_configurationType_template", l.string("USE_TEMPLATE")) -%>
        </div>

        <%= render :partial => "template_form.html", :locals => {:scope => {:form => p_f, :template_list => @template_list, :pipeline => @pipeline}} -%>

        <div id="stage_job_form">
            <% scope[:stage] = scope[:pipeline].isEmpty() ? default_stage_config : scope[:pipeline].get(0) -%>
            <%= p_f.fields_for(:stage, scope[:stage]) do |s_f| %>
                <div class="stage fieldset">
                    <div class="form_item required">
                        <%= label_tag stage_name_id = random_dom_id("stage_name_"), required_label_text(l.string('STAGE_NAME')) %>
                        <%= s_f.text_field com.thoughtworks.go.config.StageConfig::NAME, :class => "form_input required pattern_match", :id => stage_name_id -%>
                        <%= error_message_on(scope[:stage], "name", :css_class => "form_error") %>
                    </div>
                    <div class="form_item checkbox_row">
                        <label><%= l.string('STAGE_TRIGGER_TYPE:') -%></label>

                        <%= s_f.fields_for com.thoughtworks.go.config.StageConfig::APPROVAL, scope[:stage].approval do |approval| %>
                            <%= approval.radio_button com.thoughtworks.go.config.Approval::TYPE, com.thoughtworks.go.config.Approval::SUCCESS, :id => "auto" %>
                            <label for="auto"><%= l.string('AUTO') -%></label>

                            <%= approval.radio_button com.thoughtworks.go.config.Approval::TYPE, com.thoughtworks.go.config.Approval::MANUAL, :id => "manual" %>
                            <label for="manual"><%= l.string('MANUAL') -%></label>
                            <span class="stage_approval contextual_help has_go_tip_right" title="<%= l.string("RADIO_BUTTON_TITLE_APPROVAL") -%>">&nbsp;</span>
                            <%= error_message_on(scope[:stage].getApproval(), "type", :css_class => "form_error") %>
                        <% end %>
                    </div>
                    <%= render :partial => "shared/form_required_message.html" %>
                </div>

                <h3><%= l.string('INITIAL_JOB_AND_TASK') -%></h3>

                <div class="instructions"><%= l.string('INSTRUCTION_JOB_AND_TASK') -%></div>
                <div class="fieldset has_nested_fieldset">
                    <% scope[:stage].getJobs().each do |job| -%>
                        <%= s_f.fields_for com.thoughtworks.go.config.StageConfig::JOBS, job, :index => "" do |job_form| %>
                            <div class="form_item required">
                                <%= label_tag job_name_id = random_dom_id("job_name_"), required_label_text(l.string('JOB_NAME')) %>
                                <%= job_form.text_field(com.thoughtworks.go.config.JobConfig::NAME, :class => "required pattern_match", :id => job_name_id) %>
                                <%= error_message_on(job, com.thoughtworks.go.config.JobConfig::NAME, :css_class => "form_error") %>
                            </div>
                            <%= render :partial => "admin/shared/job_tasks.html", :locals => {:scope => {:job => job, :job_form => job_form, :hide_runif => true}} -%>
                        <% end %>
                    <%- end -%>
                </div>
            <% end %>
        </div>
    </div>
    <%= render :partial => 'shared/convert_tool_tips.html', :locals => {:scope => {}} %>
<% end %>

<script type="text/javascript">
    Util.on_load(function() {
        var hasSwitchedToTemplate = false;
        setConfigurationType = function(element, isFirstTime) {
            var selected = jQuery(element).val();
            if (selected == "<%=com.thoughtworks.go.config.PipelineConfig::CONFIGURATION_TYPE_STAGES%>") {
                showElement(jQuery("#select_template_container"), false);
                showElement(jQuery("#stage_job_form"), true);
            } else if (selected == "<%=com.thoughtworks.go.config.PipelineConfig::CONFIGURATION_TYPE_TEMPLATE%>") {
                showElement(jQuery("#select_template_container"), true);
                showElement(jQuery("#stage_job_form"), false);
                if (!isFirstTime) {
                    hasSwitchedToTemplate = true;
                }
            }
        };
        setConfigurationType(jQuery("input:[name='pipeline_group[pipeline][configurationType]']:checked"), true);

        jQuery("input:[name='pipeline_group[pipeline][configurationType]']").click(function() {
            setConfigurationType(this, false);
        });
    });
    AjaxForm.error_box_selector = '#MB_content';
</script>
