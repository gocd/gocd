/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m = require('mithril');
const Stream = require('mithril/stream');
const ComponentMixins = require('helpers/mithril_component_mixins');
const RoleUserReadOnlyWidget = require('views/roles/gocd_role_user_readonly_widget');
const ActionButtons = require('views/shared/action_buttons');

const RoleWidget = {
  oninit(vnode) {
    this.args = vnode.attrs;
    ComponentMixins.HasViewModel.call(this);

    const vmStateKey = `show-${vnode.attrs.role().name()}`;
    this.vmState(vmStateKey, Stream(false));

    this.toggleHide = function () {
      this.vmState(vmStateKey)(!this.vmState(vmStateKey)());
    };

    this.showState = function () {
      return this.vmState(vmStateKey)() ? 'show' : 'hide';
    };
  },

  view(vnode) {
    const showState = vnode.state.showState();

    return (

      <div class={`c-collapse ${(this.showState() === 'hide') ? 'collapsed' : 'expanded'}`}>

        <div class={`c-collapse_header ${(this.showState() === 'hide') ? 'collapsed' : 'expanded'}`}
             onclick={vnode.state.toggleHide.bind(vnode.state)}>
          <div className="c-collapse_header_details">
              <span class="c-collapse_icon">
                  <span class="gocd-role-icon"></span>
              </span>
            <dl class="key-value-pair key-value-pair-header">
              <dt class="key">Name</dt>
              <dd class="value">{vnode.attrs.role().name()}</dd>
            </dl>

          </div>
          <ActionButtons onEdit={vnode.attrs.onEdit} onClone={vnode.attrs.onClone} onDelete={vnode.attrs.onDelete}/>

        </div>

        <RoleUserReadOnlyWidget role={vnode.attrs.role} showState={showState}/>

      </div>
    );
  }
};

module.exports = RoleWidget;
