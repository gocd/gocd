<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2019 ThoughtWorks, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
       default-init-method="init">

  <import resource="classpath:/applicationContext-plugin-infra.xml"/>
  <context:annotation-config/>
  <context:component-scan base-package="com.thoughtworks.go.agent.statusapi"/>

  <!-- Loads the System Properties -->
  <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath*:agent.properties</value>
      </list>
    </property>
    <!--SYSTEM_PROPERTIES_MODE_OVERRIDE : Check system properties first, before trying the specified properties.
        This allows system properties to override any other property source.-->
    <property name="systemPropertiesMode" value="2"/>
  </bean>

  <bean id="buildLoopServer" class="com.thoughtworks.go.agent.service.HttpInvokerProxyFactoryWrapper"
        p:serviceInterface="com.thoughtworks.go.remote.BuildRepositoryRemote">
    <property name="httpInvokerRequestExecutor">
      <bean class="com.thoughtworks.go.agent.GoHttpClientHttpInvokerRequestExecutor" autowire="constructor" />
    </property>
  </bean>

  <bean id="urlService" class="com.thoughtworks.go.util.URLService"/>
  <bean id="httpService" class="com.thoughtworks.go.util.HttpService"/>
  <bean id="artifactsManipulator" class="com.thoughtworks.go.publishers.GoArtifactsManipulator"/>
  <bean id="sslInfrastructureService" class="com.thoughtworks.go.agent.service.SslInfrastructureService"/>
  <bean id="agentUpgradeService" class="com.thoughtworks.go.agent.service.AgentUpgradeService"/>
  <bean id="agentRegistry" class="com.thoughtworks.go.config.DefaultAgentRegistry"/>
  <bean id="subprocessLogger" class="com.thoughtworks.go.util.SubprocessLogger"/>
  <bean id="agentPluginsInitializer" class="com.thoughtworks.go.agent.AgentPluginsInitializer"/>
  <bean id="extensionsRegistry" class="com.thoughtworks.go.plugin.access.ExtensionsRegistry"/>
  <bean id="packageRepositoryExtension"
        class="com.thoughtworks.go.plugin.access.packagematerial.PackageRepositoryExtension"/>
  <bean id="scmExtension" class="com.thoughtworks.go.plugin.access.scm.SCMExtension"/>
  <bean id="taskExtension" class="com.thoughtworks.go.plugin.access.pluggabletask.TaskExtension"/>
  <bean id="artifactExtension" class="com.thoughtworks.go.plugin.access.artifact.ArtifactExtension"/>
  <bean id="httpClient" class="com.thoughtworks.go.agent.common.ssl.GoAgentServerHttpClient">
    <constructor-arg ref="httpClientBuilder"/>
  </bean>
  <bean id="httpClientBuilder" class="com.thoughtworks.go.agent.common.ssl.GoAgentServerHttpClientBuilder">
    <constructor-arg ref="systemEnvironment"/>
  </bean>


  <bean id="agentController" class="com.thoughtworks.go.agent.AgentHTTPClientController"/>

  <bean id="clock" class="com.thoughtworks.go.util.SystemTimeClock"/>

  <task:scheduler id="scheduler" pool-size="3"/>

  <task:scheduled-tasks scheduler="scheduler">
    <task:scheduled ref="agentController" method="loop"
                    initial-delay="${agent.get.work.delay}" fixed-delay="${agent.get.work.interval}"/>
    <task:scheduled ref="agentController" method="ping"
                    initial-delay="${agent.ping.delay}" fixed-delay="${agent.ping.interval}"/>
    <task:scheduled ref="agentController" method="execute"
                    initial-delay="${agent.instruction.delay}" fixed-delay="${agent.instruction.interval}"/>
  </task:scheduled-tasks>

</beans>
