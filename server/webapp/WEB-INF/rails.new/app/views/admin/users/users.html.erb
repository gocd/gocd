<%- @view_title = "Administration" -%>
<div id="user_summary">
	<h1>
        User Summary
		<span class="title_secondary_info">
        <ul class="user_counts list_aggregation">
            <li class='enabled'>Enabled: <%= @total_enabled_users -%></li>
            <li class='disabled'>Disabled: <%= @total_disabled_users -%></li>
        </ul>
		</span>
    </h1>

    <div id="users_table" class='users_table'>
        <%== form_tag(user_operate_path(:params => params.slice(:column, :order)), :id => 'users_form') -%>
        <input id="operation" type="hidden" name="operation" />
        <div class="fixed_wrapper">&nbsp;</div>
        <div class="edit_panel" id="dd_users_ajax_float">
            <div class="add_new_users">
                <% title = l.string("ADD_USERS") %>
                <%== link_to_remote_new title, {:method => :get, :url => users_new_path,
                                           :success => "Modalbox.show(request.responseText, { title: '#{title}', overlayClose: false, width: 850, slideDownDuration: 0, overlayDuration: 0});"}, {:class => "link_as_button"} %>
            </div>
            <%== submit_button("Enable", :onclick_lambda => "Util.set_value('operation', 'Enable')") %>
            <%== submit_button("Disable", :onclick_lambda => "Util.set_value('operation', 'Disable')") %>

            <%== submit_button("Roles", :id => "show_roles_panel", :class => "show_panel", :type => "select", :text_color => "dark") %>

            <div id="roles_panel" class="hidden resources_panel agent_edit_popup enhanced_dropdown">
                <div class='resources_selector scrollable_panel'>
                    <div class="loading"></div>
                </div>
                <div class="add_panel hidden">
                    <input type="text" name="new_role" class='new_role new_field'/>
                    <%== submit_button("Add", :class => "apply_resources apply_button submit_small primary", :name => "role_operation") %>

                    <div class="validation_message error hidden">Invalid character. Please use a-z, A-Z, 0-9, fullstop, underscore, hyphen and pipe.</div>
                </div>
                <div class="no_selection_error error hidden">Please select one or more users first.</div>
            </div>
            </div>


            <table class='list_table sortable_table'>
                <tr class='user_header'>
                    <th class='selector'></th>
                    <th class='username'><%= column_header "Username", 'username' %></th>
                    <th class='roles'><%= column_header "Roles", 'roles' %></th>
                    <th class='aliases'><%= column_header "Aliases", 'matchers' %></th>
                    <th class='is_admin'><%= column_header "Admin", 'is_admin' %></th>
                    <th class='email'><%= column_header "Email", 'email' %></th>
                    <th class='enabled'><%= column_header "Enabled", 'enabled' %></th>
                </tr>
                <% @users.each do |user_model| %>
                    <tr class='user<%==  user_model.isEnabled() ? "" : " Disabled" %>'>
                        <td class='selector'>
                            <input type='checkbox' name='selected[]' value='<%= user_model.getUser().getName()-%>' class='agent_select'/>
                        </td>
                        <%= cell_with_title(h(user_model.getUser().getName()), 'username') %>
                        <%= piped_cell( user_model.getRoles(), '', 'roles') %>
                        <%= piped_cell(user_model.getUser().getMatchers(), '', 'aliases') %>
                        <%= cell_with_title(user_model.isAdmin() ? "Yes" : "No", 'is_admin') %>
                        <%= cell_with_title(h(user_model.getUser().getEmail()), 'email') %>
                        <%= cell_with_title(user_model.isEnabled() ? "Yes" : "No", 'enabled') %>
                    </tr>
                <% end %>
            </table>
        <%== end_form_tag %>
    </div>
</div>

<script type="text/javascript">
    Util.on_load(function() {
        jQuery(document).ready(function($) {
            var fixedWrapper = jQuery(".fixed_wrapper");
            var editPanel = jQuery('#dd_users_ajax_float');
            var descripY = parseInt(jQuery('#dd_users_ajax_float').offset().top) - 12;
            var pullX = editPanel.css('margin-left');
            $(window).scroll(function() {
                var scrollY = $(window).scrollTop() + jQuery('#header').height() + jQuery('.page_header').height(); //added height - actually our docking base is primary header
                var fixedShare = editPanel.css('position') == 'fixed';
                if (scrollY > descripY && !fixedShare) {
                    editPanel.addClass("isFixed");
                    editPanel.find('.enhanced_dropdown').each(function(){
                        var offset = $(this).prev().offset();
                        $(this).css('top', 35);
                        $(this).css('left', offset.left + 5);
                    });
                } else if (scrollY < descripY && fixedShare) {
                    editPanel.removeClass("isFixed");
                    editPanel.find('.enhanced_dropdown').each(function(){
                        var offset = $(this).prev().offset();
                        $(this).css('top', 27);
                        $(this).css('left', offset.left - 10);
                    });
                }
            });
        });

        var roles_panel_callback_handler = new EditPopupHandler.AddEditHandler('<%= user_roles_path %>', $('users_form'), Util.are_any_rows_selected('.user .agent_select'), Util.validate_name_type, 'operation', 'apply_roles', 'add_role');
        var roles_panel = new MicroContentPopup($('roles_panel'), roles_panel_callback_handler);
        var roles_panel_shower = new MicroContentPopup.ClickShower(roles_panel);
        roles_panel_shower.bindShowButton($('show_roles_panel'), jQuery('#dd_users_ajax_float').get(0));
        roles_panel_callback_handler.setDefaultText($$('.new_role')[0], "Create New");

        $('users_form').observe("keydown", function (evt) {
            if (evt.keyCode == Event.KEY_RETURN) {
                evt.stop();
                return false;
            }
            return true;
        });
    });
</script>

