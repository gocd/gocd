/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function() {
  "use strict";

  const m = require("mithril");

  const AnalyticsiFrameWidget = function() {
    let currentUrl = null;
    function oncreate(vnode) {
      const iframe = vnode.dom.firstChild;

      iframe.onload = () => {
        vnode.attrs.init(iframe.contentWindow, {
          uid: vnode.attrs.uid,
          pluginId: vnode.attrs.pluginId,
          initialData: vnode.attrs.model.data()
        });
      };

      currentUrl = vnode.attrs.model.url();

      vnode.attrs.model.load();
    }

    function onupdate(vnode) {
      const iframe = vnode.dom.firstChild;
      if (vnode.attrs && vnode.attrs.model) {
        if (currentUrl !== vnode.attrs.model.url()) {
          iframe.onload = () => {
            vnode.attrs.init(iframe.contentWindow, {
              uid: vnode.attrs.uid,
              pluginId: vnode.attrs.pluginId,
              initialData: vnode.attrs.model.data()
            });
          };

          currentUrl = vnode.attrs.model.url();

          vnode.attrs.model.load();
        }
      }
    }

    function view(vnode) {
      const model = vnode.attrs.model,
        attrs = { src: model.view(), scrolling: "no" },
        errorAttrs = model.errors() ? { "data-error-text": model.errors() } : {};

      return <div class="frame-container" {...errorAttrs}>
        <iframe sandbox="allow-scripts" {...attrs}></iframe>
      </div>;
    }

    return {oncreate, view, onupdate};
  };

  module.exports = AnalyticsiFrameWidget;

})();
