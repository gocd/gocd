<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2019 ThoughtWorks, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 2.6//EN"
    "http://www.tuckey.org/res/dtds/urlrewrite3.2.dtd">

<!--
    Configuration file for UrlRewriteFilter 2.6
    http://tuckey.org/urlrewrite/
-->

<urlrewrite>
  <rule>
    <name>environments UI</name>
    <from>^/admin/environments(/?)$</from>
    <run class="com.thoughtworks.go.server.SparkOrRailsEnvironmentsPageToggle" method="environmentsPage"/>
    <to last="true">%{attribute:url}</to>
  </rule>

  <rule>
    <name>Feature Toggles Index API</name>
    <from>^/api/admin/feature_toggles(/?)$</from>
    <to last="true">/spark/api/admin/feature_toggles</to>
  </rule>

  <rule>
    <name>Feature Toggles Index API</name>
    <from>^/api/admin/feature_toggles/(.*)$</from>
    <to last="true">/spark/api/admin/feature_toggles/${escape:$1}</to>
  </rule>

  <rule>
    <name>Pipeline Structure Internal API</name>
    <from>^/api/internal/pipeline_structure(/?)$</from>
    <to last="true">/spark/api/internal/pipeline_structure</to>
  </rule>

  <rule>
    <name>pipeline_configs UI</name>
    <from>^/admin/pipeline_configs(/?)$</from>
    <to last="true">/spark/admin/pipeline_configs</to>
  </rule>

  <rule>
    <name>mail_server UI</name>
    <from>^/admin/mail_server(/?)$</from>
    <to last="true">/spark/admin/mail_server</to>
  </rule>

  <rule>
    <name>Mailhost API</name>
    <from>^/api/config/mailserver(/?)$</from>
    <to last="true">/spark/api/config/mailserver</to>
  </rule>

  <rule>
    <name>Internal Resources API</name>
    <from>^/api/admin/internal/resources$</from>
    <to last="true">/spark/api/admin/internal/resources</to>
  </rule>

  <rule>
    <name>Internal Environment API</name>
    <from>^/api/admin/internal/environments$</from>
    <to last="true">/spark/api/admin/internal/environments</to>
  </rule>

  <rule>
    <name>Internal Environment Merged API</name>
    <from>^/api/admin/internal/environments/merged$</from>
    <to last="true">/spark/api/admin/internal/environments/merged</to>
  </rule>

  <rule>
    <name>Internal Command Snippets API</name>
    <from>^/api/admin/internal/command_snippets$</from>
    <to last="true">/spark/api/admin/internal/command_snippets</to>
  </rule>

  <rule>
    <name>Backup Config API</name>
    <from>^/api/config/backup$</from>
    <to last="true">/spark/api/config/backup</to>
  </rule>

  <rule>
    <name>Server Info About SPA</name>
    <from>^/about(/?)$</from>
    <to last="true">/spark/about</to>
  </rule>

  <rule>
    <name>Spark Materials Index API</name>
    <from>^/api/config/materials(/?)$</from>
    <to last="true">/spark/api/config/materials</to>
  </rule>

  <rule>
    <name>Spark Material Modifications API</name>
    <from>^/api/materials/([^/]+)/modifications(/?)$</from>
    <to last="true">/spark/api/materials/${escape:$1}/modifications</to>
  </rule>

  <rule>
    <name>Spark Material Modifications with offset API</name>
    <from>^/api/materials/([^/]+)/modifications/([^/+])(/?)$</from>
    <to last="true">/spark/api/materials/${escape:$1}/modifications/${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark Material Notify API</name>
    <from>^/api/admin/materials/(svn|git|hg|scm)/notify(/?)$</from>
    <to last="true">/spark/api/admin/materials/${escape:$1}/notify</to>
  </rule>

  <rule>
    <name>secret_configs UI</name>
    <from>^/admin/secret_configs(/?)$</from>
    <to last="true">/spark/admin/secret_configs</to>
  </rule>

  <rule>
    <name>Login page</name>
    <from>^/auth/login(/?)$</from>
    <to last="true">/spark/auth/login</to>
  </rule>

  <rule>
    <name>Logout page</name>
    <from>^/auth/logout(/?)$</from>
    <to last="true">/spark/auth/logout</to>
  </rule>

  <rule>
    <name>CCTray feed</name>
    <from>/cctray.xml</from>
    <to last="true">/spark/cctray.xml</to>
  </rule>

  <rule>
    <name>API support</name>
    <from>^/api/support</from>
    <to last="true">/spark/api/support</to>
  </rule>

  <rule>
    <name>Admin Access Tokens SPA</name>
    <from>^/admin/admin_access_tokens(/?)$</from>
    <to last="true">/spark/admin/admin_access_tokens</to>
  </rule>

  <rule>
    <name>User Search API</name>
    <from>^/api/user_search(/?)$</from>
    <to last="true">/spark/api/user_search</to>
  </rule>

  <rule>
    <name>Spark Plugin Settings Create API</name>
    <from>^/api/admin/plugin_settings(/?)$</from>
    <to last="true">/spark/api/admin/plugin_settings</to>
  </rule>

  <rule>
    <name>Spark Plugin Settings Get and Update API</name>
    <from>^/api/admin/plugin_settings/(.*)$</from>
    <to last="true">/spark/api/admin/plugin_settings/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Cluster Profile Index API</name>
    <from>^/api/admin/elastic/cluster_profiles(/?)$</from>
    <to last="true">/spark/api/admin/elastic/cluster_profiles</to>
  </rule>

  <rule>
    <name>Spark Cluster Profile Get API</name>
    <from>^/api/admin/elastic/cluster_profiles/(.*)$</from>
    <to last="true">/spark/api/admin/elastic/cluster_profiles/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Pluggable SCMs Index API</name>
    <from>^/api/admin/scms(/?)$</from>
    <to last="true">/spark/api/admin/scms</to>
  </rule>

  <rule>
    <name>Spark Pluggable SCM CRUD API</name>
    <from>^/api/admin/scms/(.*)$</from>
    <to last="true">/spark/api/admin/scms/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Plugin Info Index API</name>
    <from>^/api/admin/plugin_info(/?)$</from>
    <to last="true">/spark/api/admin/plugin_info</to>
  </rule>

  <rule>
    <name>Spark Plugin Info Get API</name>
    <from>^/api/admin/plugin_info/(.*)$</from>
    <to last="true">/spark/api/admin/plugin_info/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Users Index API</name>
    <from>^/api/users(/?)$</from>
    <to last="true">/spark/api/users</to>
  </rule>

  <rule>
    <name>Spark Users Show and Delete API</name>
    <from>^/api/users/(.*)$</from>
    <to last="true">/spark/api/users/${escape:$1}</to>
  </rule>

  <rule>
    <name>Access Token Index and Create API</name>
    <from>^/api/(current_user|admin)/access_tokens(/?)$</from>
    <to last="true">/spark/api/$1/access_tokens</to>
  </rule>

  <rule>
    <name>Spark Access Token Show API</name>
    <from>^/api/(current_user|admin)/access_tokens/(.*)$</from>
    <to last="true">/spark/api/$1/access_tokens/${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark Access Token Revoke API</name>
    <from>^/api/(current_user|admin)/access_tokens/([^/]+)/([^/]+)/revoke</from>
    <to last="true">/spark/api/$1/access_tokens/${escape:$2}/${escape:$3}/revoke</to>
  </rule>

  <rule>
    <name>users UI</name>
    <from>^/admin/users(/?)$</from>
    <to last="true">/spark/admin/users</to>
  </rule>

  <rule>
    <name>backup UI</name>
    <from>^/admin/backup(/?)$</from>
    <to last="true">/spark/admin/backup</to>
  </rule>

  <rule>
    <name>Current Version detail</name>
    <from>^/api/version$</from>
    <to last="true">/spark/api/version</to>
  </rule>

  <rule>
    <name>Root page</name>
    <from>^/(home)?/?$</from>
    <to type="redirect" last="true">/go/pipelines</to>
  </rule>

  <rule>
    <name>Spark Secret Configs Index API</name>
    <from>^/api/admin/secret_configs$</from>
    <to last="true">/spark/api/admin/secret_configs</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Spark Secret Configs API</name>
    <from>^/api/admin/secret_configs/(.*)$</from>
    <to last="true">/spark/api/admin/secret_configs/${escape:$1}</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Spark Elastic Profile Index API</name>
    <from>^/api/elastic/profiles$</from>
    <to last="true">/spark/api/elastic/profiles</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Spark Elastic Profiles API</name>
    <from>^/api/elastic/profiles/(.*)$</from>
    <to last="true">/spark/api/elastic/profiles/${escape:$1}</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Spark Elastic Profiles Usage API</name>
    <from>^/api/internal/elastic/profiles/(.*)/usages$</from>
    <to last="true">/spark/api/internal/elastic/profiles/${escape:$1}/usages</to>
  </rule>

  <rule>
    <name>Spark Artifact Store Index API</name>
    <from>^/api/admin/artifact_stores(/?)$</from>
    <to last="true">/spark/api/admin/artifact_stores</to>
  </rule>

  <rule>
    <name>Spark Artifact Store API</name>
    <from>^/api/admin/artifact_stores/(.*)$</from>
    <to last="true">/spark/api/admin/artifact_stores/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Environment Index API</name>
    <from>^/api/admin/environments(/?)$</from>
    <to last="true">/spark/api/admin/environments</to>
  </rule>

  <rule>
    <name>Spark Environment CRUD API</name>
    <from>^/api/admin/environments/(.*)$</from>
    <to last="true">/spark/api/admin/environments/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Config Export API</name>
    <from>^/api/admin/export/(pipelines)/([^/]+)(?:/?)$</from>
    <to last="true">/spark/api/admin/export/${escape:$1}/${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark Pipeline Config API</name>
    <from>^/api/admin/pipelines(?:(/)([^/]+))?(?:/?)$</from>
    <to last="true">/spark/api/admin/pipelines$1${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark Pipeline Groups Index API</name>
    <from>^/api/admin/pipeline_groups(/?)$</from>
    <to last="true">/spark/api/admin/pipeline_groups</to>
  </rule>

  <rule>
    <name>Spark Pipeline Groups API</name>
    <from>^/api/admin/pipeline_groups/(.*)$</from>
    <to last="true">/spark/api/admin/pipeline_groups/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Template Config Index API</name>
    <from>^/api/admin/templates(/?)$</from>
    <to last="true">/spark/api/admin/templates</to>
  </rule>

  <rule>
    <name>Rails Template Authorization Config API</name>
    <from>^/api/admin/templates/([^/]+)/authorization(/?)$</from>
    <to last="true">/rails/api/admin/templates/${escape:$1}/authorization</to>
  </rule>

  <rule>
    <name>Spark Template Config API</name>
    <from>^/api/admin/templates/(.*)$</from>
    <to last="true">/spark/api/admin/templates/${escape:$1}</to>
  </rule>

  <rule>
    <name>Rails API for the job run history api</name>
    <from>^/api/agents/([^/]+)/job_run_history(?:(?:/)(.*))?(?:/?)$</from>
    <to last="true">/rails/api/agents/$1/job_run_history/$2</to>
  </rule>

  <rule>
    <name>Spark Agents Index API</name>
    <from>^/api/agents$</from>
    <to last="true">/spark/api/agents</to>
  </rule>

  <rule>
    <name>Spark Agents API</name>
    <from>^/api/agents/(.*)$</from>
    <to last="true">/spark/api/agents/${escape:$1}</to>
  </rule>

  <rule>
    <name>Access Tokens SPA</name>
    <from>^/access_tokens(/?)$</from>
    <to last="true">/spark/access_tokens</to>
  </rule>

  <rule>
    <name>Kitchen Sink SPA</name>
    <from>^/kitchen-sink(/?)$</from>
    <to last="true">/spark/kitchen-sink</to>
  </rule>

  <rule>
    <name>Artifact Stores SPA</name>
    <from>^/admin/artifact_stores(/?)$</from>
    <to last="true">/spark/admin/artifact_stores</to>
  </rule>

  <rule>
    <name>Plugins SPA</name>
    <from>^/admin/plugins(/?)$</from>
    <to last="true">/spark/admin/plugins</to>
  </rule>

  <rule>
    <name>Elastic Agent Configurations SPA Redirect</name>
    <from>^/admin/elastic_profiles(/?)$</from>
    <to type="temporary-redirect" last="true">/go/admin/elastic_agent_configurations</to>
  </rule>

  <rule>
    <name>Elastic Agent Configurations SPA</name>
    <from>^/admin/elastic_agent_configurations(/?)$</from>
    <to last="true">/spark/admin/elastic_agent_configurations</to>
  </rule>

  <rule>
    <name>Config Repos SPA</name>
    <from>^/admin/config_repos(/?)$</from>
    <to last="true">/spark/admin/config_repos</to>
  </rule>

  <rule>
    <name>Agents SPA</name>
    <from>^/agents(/?)$</from>
    <run class="com.thoughtworks.go.server.AgentsPageToggle" method="agentsPage"/>
    <to last="true">%{attribute:url}</to>
  </rule>

  <rule>
    <name>Analytics SPA</name>
    <from>^/analytics(/?)$</from>
    <to last="true">/spark/analytics</to>
  </rule>

  <rule>
    <name>Metrics Consent SPA</name>
    <from>^/admin/data_sharing/settings(/?)$</from>
    <to last="true">/spark/admin/data_sharing/settings</to>
  </rule>

  <rule>
    <name>Analytics Fetch API</name>
    <from>^/analytics/([^/]+)/([^/]+)/([^/]+)</from>
    <to last="true">/spark/analytics/${escape:$1}/${escape:$2}/${escape:$3}</to>
  </rule>

  <rule>
    <name>Build Cause API</name>
    <from>^/api/internal/build_cause/([^/]+)/([^/]+)</from>
    <to last="true">/spark/api/internal/build_cause/${escape:$1}/${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark pipeline selection internal API</name>
    <from>^/api/internal/pipeline_selection(/?)$</from>
    <to last="true">/spark/api/internal/pipeline_selection</to>
  </rule>

  <rule>
    <name>Spark pipeline internal API</name>
    <from>^/api/admin/internal/pipelines(/?)$</from>
    <to last="true">/spark/api/admin/internal/pipelines</to>
  </rule>

  <rule>
    <name>Spark pipeline selection pipelines data internal API</name>
    <from>^/api/internal/pipeline_selection/pipelines_data(/?)$</from>
    <to last="true">/spark/api/internal/pipeline_selection/pipelines_data</to>
  </rule>

  <rule>
    <name>Pipeline Dependency Material Autocomplete API</name>
    <from>^/api/internal/dependency_material/autocomplete_suggestions(/?)$</from>
    <to last="true">/spark/api/internal/dependency_material/autocomplete_suggestions</to>
  </rule>

  <rule>
    <name>Material Search API</name>
    <from>^/api/internal/material_search(/?)$</from>
    <to last="true">/spark/api/internal/material_search</to>
  </rule>

  <rule>
    <name>Spark Server Health Messages API</name>
    <from>^/api/server_health_messages(/?)$</from>
    <to last="true">/spark/api/server_health_messages</to>
  </rule>

  <rule>
    <name>Server Health Status API</name>
    <from>^/api/v1/health(/?)$</from>
    <to last="true">/spark/api/v1/health</to>
  </rule>

  <rule>
    <name>Spark Dashboard API</name>
    <from>^/api/dashboard(/?)$</from>
    <to last="true">/spark/api/dashboard</to>
  </rule>

  <rule>
    <name>Roles Config SPA</name>
    <from>^/admin/security/roles(/?)$</from>
    <to last="true">/spark/admin/security/roles</to>
  </rule>

  <rule>
    <name>System Admins(AdminsConfig) API</name>
    <from>^/api/admin/security/system_admins$</from>
    <to last="true">/spark/api/admin/security/system_admins</to>
  </rule>

  <rule>
    <name>Spark Security Role Configs API Index API</name>
    <from>^/api/admin/security/roles(/?)$</from>
    <to last="true">/spark/api/admin/security/roles</to>
  </rule>

  <rule>
    <name>Spark Security Role Configs API</name>
    <from>^/api/admin/security/roles/(.*)$</from>
    <to last="true">/spark/api/admin/security/roles/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Stage Operations API</name>
    <from>^/api/stages/([^/]+)/([^/]+)/([^/]+)/run(/?)</from>
    <to last="true">/spark/api/stages/${escape:$1}/${escape:$2}/${escape:$3}/run</to>
  </rule>

  <rule>
    <name>Spark Config Repos Operations API</name>
    <from>^/api/admin/config_repo_ops/(preflight)(/?)</from>
    <to last="true">/spark/api/admin/config_repo_ops/${escape:$1}</to>
  </rule>

  <rule>
    <name>Spark Stage Instance API</name>
    <from>^/api/stages/([^/]+)/([^/]+)/instance/([^/]+)/([^/]+)(/?)</from>
    <to last="true">/spark/api/stages/${escape:$1}/${escape:$2}/instance/${escape:$3}/${escape:$4}</to>
  </rule>

  <rule>
    <name>Spark Stage History Offset API</name>
    <from>^/api/stages/([^/]+)/([^/]+)/history/([^/]+)(/?)</from>
    <to last="true">/spark/api/stages/${escape:$1}/${escape:$2}/history/${escape:$3}</to>
  </rule>

  <rule>
    <name>Spark Stage History API</name>
    <from>^/api/stages/([^/]+)/([^/]+)/history(/?)</from>
    <to last="true">/spark/api/stages/${escape:$1}/${escape:$2}/history</to>
  </rule>

  <rule>
    <name>Spark Config Repos Internal Operations API</name>
    <from>^/api/internal/config_repos/([^/]+)/(trigger_update|status|definitions)(/?)</from>
    <to last="true">/spark/api/internal/config_repos/${escape:$1}/${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark Config Repos Internal API</name>
    <from>^/api/internal/config_repos(?:(/)([^/]+))?(?:/?)</from>
    <to last="true">/spark/api/internal/config_repos$1${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark Config Repos API</name>
    <from>^/api/admin/config_repos(?:(/)([^/]+))?(?:/?)</from>
    <to last="true">/spark/api/admin/config_repos$1${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark pipeline pause/unpause/unlock/trigger_view API/schedule API</name>
    <from>^/api/pipelines/([^/]+)/(pause|unpause|unlock|trigger_options|schedule)</from>
    <to last="true">/spark/api/pipelines/${escape:$1}/${escape:$2}</to>
  </rule>

  <rule>
    <name>Spark Stage Operations APIs for re-rerun/cancel</name>
    <from>^/api/stages/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(run-failed-jobs|run-selected-jobs|cancel)(/?)</from>
    <to last="true">/spark/api/stages/${escape:$1}/${escape:$2}/${escape:$3}/${escape:$4}/${escape:$5}</to>
  </rule>

  <rule>
    <name>Plugin Images</name>
    <from>^/api/plugin_images/(.*)$</from>
    <to last="true">/spark/api/plugin_images/$1</to>
  </rule>

  <rule>
    <name>Encryption API</name>
    <from>^/api/admin/encrypt(/?)$</from>
    <to last="true">/spark/api/admin/encrypt</to>
  </rule>

  <rule>
    <name>Current User API</name>
    <from>^/api/current_user(/?)$</from>
    <to last="true">/spark/api/current_user</to>
  </rule>

  <rule>
    <name>Backup Index API for create</name>
    <from>^/api/backups$</from>
    <to last="true">/spark/api/backups</to>
  </rule>

  <rule>
    <name>Backup API</name>
    <from>^/api/backups/(.*)(/?)$</from>
    <to last="true">/spark/api/backups/$1</to>
  </rule>

  <rule>
    <name>Data Sharing APIs</name>
    <from>^/api/data_sharing/(.*)(/?)$</from>
    <to last="true">/spark/api/data_sharing/$1</to>
  </rule>

  <rule>
    <name>Data Sharing Internal APIs</name>
    <from>^/api/internal/data_sharing/(.*)(/?)$</from>
    <to last="true">/spark/api/internal/data_sharing/$1</to>
  </rule>

  <rule>
    <name>Data Sharing Reporting APIs</name>
    <from>^/api/internal/data_sharing/reporting/(.*)(/?)$</from>
    <to last="true">/spark/api/internal/data_sharing/reporting/$1</to>
  </rule>

  <rule>
    <name>Maintenance Mode APIs</name>
    <from>^/api/admin/maintenance_mode/(.*)(/?)$</from>
    <to last="true">/spark/api/admin/maintenance_mode/$1</to>
  </rule>

  <rule>
    <name>Maintenance Mode UI</name>
    <from>^/admin/maintenance_mode(/?)$</from>
    <to last="true">/spark/admin/maintenance_mode</to>
  </rule>

  <rule>
    <name>Initialize for_rails</name>
    <from>.*</from>
    <set name="rails_bound">false</set>
  </rule>

  <rule>
    <name>Static content when backup in progress</name>
    <note>Serve static content when backup in progress</note>
    <from>^((/static/.*)|(/images/.*)|(/javascripts/.*)|(/stylesheets/.*)|(/compressed/.*))$</from>
    <to last="true">$1</to>
  </rule>

  <rule>
    <name>Rails Plugin Status Report call</name>
    <from>^/admin/status_reports/(.*)$</from>
    <to last="true">/rails/admin/status_reports/$1</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Rails Agent Status Report call</name>
    <from>^/admin/status_reports/([^/]+)/(.*)</from>
    <to last="true">/rails/admin/status_reports/$1/$2</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Dashboard UI</name>
    <from>^/dashboard(/?)$</from>
    <to last="true">/spark/dashboard</to>
  </rule>

  <rule>
    <name>Simplified Add Pipeline Pages</name>
    <from>^/admin/pipelines/(create|as-code)(/?)$</from>
    <to last="true">/spark/admin/pipelines/${escape:$1}</to>
  </rule>

  <rule>
    <name>Internal Pipelines as Code Supporting API</name>
    <from>^/api/admin/internal/pac/(preview|config_files)/([^/]+)(/?)$</from>
    <to last="true">/spark/api/admin/internal/pac/${escape:$1}/${escape:$2}</to>
  </rule>

  <rule>
    <name>Default dashboard, based on toggle</name>
    <from>^/pipelines(/?)$</from>
    <to last="true">/spark/dashboard</to>
  </rule>

  <rule>
    <name>Auth Config SPA</name>
    <from>^/admin/security/auth_configs(/?)$</from>
    <to last="true">/spark/admin/security/auth_configs</to>
  </rule>

  <rule>
    <name>Rails UI</name>
    <note>
      Prepends 'rails/' to Rails urls, so that the request does not go through Java at all
      (currently RackFilter passes a request to Rails only if Java returns a 40* HTTP response
    </note>
    <from>
      ^/((jasmine-specs)|(jasmine-specs/*)|(preferences)|(preferences/.*)|(agents)|(agents/.*)|(agents\..*)|(environments)|(admin/environments)|(admin/environments/.*)|(admin/environments\..*)|(environments/.*)|(environments\..*)|(pipelines/.*)|(pipelines\.json)|(materials/.*)|(pipelines)|(history/.*)|(server)|(server/.*)|(admin/config/.*)|(admin/users)|(admin/users/.*)|(failures/.*)|(compare/.*)|(admin/pipelines)|(admin/pipelines/.*)|(admin/pipeline/.*)|(admin/pipeline_group)|(admin/pipeline_group/.*)|(admin/templates)|(admin/templates/.*)|(admin/commands)|(admin/commands/.*)|(admin/plugins)|(admin/plugins/.*)|(admin/config_change/.*)|(admin/config_xml)|(admin/config_xml/.*)|(admin/package_repositories)|(admin/package_repositories/.*)|(config_view/.*)|(admin/package_definitions)|(admin/package_definitions/.*)|(admin/materials)|(admin/materials/.*)|(assets/.*)|(errors/inactive))$
    </from>
    <to last="true">/rails/$1</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Security Auth Configs API Index API</name>
    <from>^/api/admin/security/auth_configs</from>
    <to last="true">/spark/api/admin/security/auth_configs</to>
  </rule>

  <rule>
    <name>Security Auth Configs API</name>
    <from>^/api/admin/security/auth_configs/(.*)$</from>
    <to last="true">/spark/api/admin/security/auth_configs/${escape:$1}</to>
  </rule>

  <rule>
    <name>Security Auth Configs internal API</name>
    <from>^/api/admin/internal/security/auth_configs/verify_connection$</from>
    <to last="true">/spark/api/admin/internal/security/auth_configs/verify_connection</to>
  </rule>

  <rule>
    <name>Rails API</name>
    <from>^/(api/(?!admin/config).*)$</from>
    <to last="true">/rails/$1</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Rails Internal API</name>
    <from>^/(api/config/internal/.*)$</from>
    <to last="true">/rails/$1</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Update Check URLs</name>
    <from>^/(api/version_infos/.*)$</from>
    <to last="true">/rails/$1</to>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Already rails bound</name>
    <from>^/(rails/.*)$</from>
    <set name="rails_bound">true</set>
  </rule>

  <rule>
    <name>Agent files and properties</name>
    <note>
      For agent to download/upload artifacts and publish properties
    </note>
    <from>^/remoting/(files|properties)/(.*)</from>
    <to last="false">/$1/$2</to>
  </rule>

  <!-- RESTful URLS -->
  <rule>
    <name>Set _method attribute to METHOD type</name>
    <condition type="attribute" name="rails_bound">false</condition>
    <from>.+</from>
    <set name="_method">%{method}</set>
  </rule>

  <rule>
    <name>Reset _method attribute if _method parameter is passed in</name>
    <condition type="attribute" name="rails_bound">false</condition>
    <condition type="parameter" name="_method">.+</condition>
    <from>.+</from>
    <set name="_method">%{parameter:_method}</set>
  </rule>

  <rule>
    <condition type="request-uri">(.+)\.csv$</condition>
    <from>(.+)</from>
    <set name="_type">csv</set>
  </rule>

  <rule>
    <condition type="request-uri">(.+)\.json$</condition>
    <from>(.+)</from>
    <set name="_type">json</set>
  </rule>

  <rule>
    <condition type="request-uri">(.+)\.html$</condition>
    <from>(.+)</from>
    <set name="_type">html</set>
  </rule>

  <rule>
    <condition type="request-uri">(.+)\.xml$</condition>
    <from>(.+)</from>
    <set name="_type">xml</set>
  </rule>

  <rule>
    <condition type="request-uri">(.+)\.zip$</condition>
    <from>(.+)</from>
    <set name="_type">zip</set>
  </rule>

  <rule>
    <name>RESTful Artifacts - List All builds artifacts</name>
    <from>^/files/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+?)(\.(json|html))?(\?.*)?$</from>
    <to type="forward">/repository/restful/artifact/%{attribute:_method}/%{attribute:_type}?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;buildName=$5&amp;filePath=</to>
  </rule>

  <rule>
    <name>RESTful Artifacts with start LineNumber</name>
    <condition type="parameter" name="startLineNumber"/>
    <from>^/files/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(.*?)(\?.*)?$</from>
    <to type="forward">/consoleout.json?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;buildName=$5&amp;filePath=${escape:$6}</to>
    <set name="startLineNumber">{parameter:startLineNumber}</set>
  </rule>

  <rule>
    <name>RESTful Artifacts with SHA1</name>
    <condition type="parameter" name="sha1"/>
    <from>^/files/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(.*?)(\?.*)?$</from>
    <to type="forward">/repository/restful/artifact/%{attribute:_method}/%{attribute:_type}?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;buildName=$5&amp;filePath=${escape:$6}</to>
    <set name="sha1">{parameter:sha1}</set>
  </rule>

  <rule>
    <name>RESTful Artifacts</name>
    <from>^/files/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(.*?)(\?.*)?$</from>
    <to type="forward">/repository/restful/artifact/%{attribute:_method}/%{attribute:_type}?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;buildName=$5&amp;filePath=${escape:$6}</to>
  </rule>

  <rule>
    <name>RESTful Properties Search for one job</name>
    <condition type="parameter" name="pipelineCounter"/>
    <from>^/properties/search(\?.*)?$</from>
    <to type="forward">/repository/restful/properties/job/search</to>
  </rule>

  <rule>
    <name>RESTful Properties Search for all jobs</name>
    <from>^/properties/search(\?.*)?$</from>
    <to type="forward">/repository/restful/properties/jobs/search</to>
  </rule>

  <rule>
    <name>Post RESTful Property for a job</name>
    <condition type="parameter" name="value"/>
    <from>^/properties/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(.*?)?$</from>
    <to type="forward">/repository/restful/properties/post?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;jobName=$5&amp;property=$6</to>
  </rule>

  <rule>
    <name>RESTful Property for a job</name>
    <from>^/properties/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(.*?)?$</from>
    <to type="forward">/repository/restful/properties/job/search?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;jobName=$5&amp;property=$6</to>
  </rule>

  <rule>
    <name>RESTful Properties for a job</name>
    <from>^/properties/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(.*?)?$</from>
    <to type="forward">/repository/restful/properties/job/search?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;jobName=$5</to>
  </rule>

  <rule>
    <name>Cruise Configuration Administration RESTful url - File</name>
    <from>^/api/admin/config.xml$</from>
    <to type="forward" last="true">/admin/restful/configuration/file/%{attribute:_method}/xml?version=current</to>
  </rule>

  <rule>
    <name>Cruise Configuration Administration RESTful url - File</name>
    <from>^/api/admin/config/([^/]+)\.xml$</from>
    <to type="forward" last="true">/admin/restful/configuration/file/%{attribute:_method}/historical-xml?version=$1</to>
  </rule>

  <rule>
    <name>Cruise Configuration Administration RESTful url - File</name>
    <from>^/admin/configuration/file\.xml(\?.*)?$</from>
    <to type="forward">/admin/restful/configuration/file/%{attribute:_method}/%{attribute:_type}</to>
  </rule>

  <rule>
    <name>Specific Build Detail</name>
    <from>/tab/build/detail/([^/]+)/([^/]+)/([^/]+)/([^/]+)/([^/]+)</from>
    <to type="forward">/tab/build/recent?pipelineName=$1&amp;pipelineCounter=$2&amp;stageName=$3&amp;stageCounter=$4&amp;jobName=$5</to>
  </rule>

  <rule>
    <name>Pipeline history</name>
    <from>/tab/pipeline/history/([^/]+)</from>
    <to type="forward">/tab/pipeline/history?pipelineName=$1</to>
  </rule>

  <rule>
    <name>Stage detail beta</name>
    <from>/pipelines/([^/]+)/([^/]+)/([^/]+)/([^/]+)</from>
    <to type="forward">/pipelines/history?pipelineName=$1&amp;label=$2&amp;stageName=$3&amp;counter=$4</to>
  </rule>

  <rule>
    <name>Site url API</name>
    <from>^/api/admin/config/server/site_urls$</from>
    <to last="true">/spark/api/admin/config/server/site_urls</to>
  </rule>
</urlrewrite>
