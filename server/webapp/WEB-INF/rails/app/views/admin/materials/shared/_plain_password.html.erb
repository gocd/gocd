<%
  scope[:password_class] ||= 'password'
%>
<div class="form_item_block">
  <label>Password-new</label>
  <%= scope[:form].hidden_field(com.thoughtworks.go.config.materials.ScmMaterialConfig::ENCRYPTED_PASSWORD, {:class => "form_input encrypted_password"}) -%>
  <%= scope[:form].password_field(com.thoughtworks.go.config.materials.ScmMaterialConfig::PASSWORD, {:class => "form_input #{scope[:password_class]}", :autocomplete => "off"}) -%>
  <%= error_message_on(scope[:form].object, com.thoughtworks.go.config.materials.ScmMaterialConfig::PASSWORD, :css_class => "form_error") %>

  <div class="checkbox_row">
    <%= scope[:form].check_box("password_display_toggle", {:value => "0", :checked => false, :onclick => "toggleDisplay(this, this.id)"}) %>
    <label class="condition" for="password_display_toggle">Show/Hide</label>
  </div>
  <div class="hidden">
    <%= scope[:form].check_box(com.thoughtworks.go.config.materials.ScmMaterialConfig::PASSWORD_CHANGED, {:class => "form_input password_changed", :value => "1", :checked => true, :include_hidden => false}) -%>
  </div>
</div>

<script type="text/javascript">
  window.toggleDisplay = function (sender, id) {
    var passwordField = jQuery("#" + id.substr(0, id.indexOf("password_display_toggle")) + "password");
    passwordField.get(0).setAttribute('type', sender.checked ? 'text' : 'password');
  };
</script>
