/*
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

define(['mithril', 'string-plus'], function (m, s) {

  var SortHeaderWidget = {
    view: function (ctrl, args) {
      return (
        <label class="agents-table-header" onclick={args.toggleSortingOrder.bind(ctrl, args.attrName)}>{args.attrLabel}
          <div class={"sort " + args.sortClass(args.attrName)}>
            <span class="up"/>
            <span class="down"/>
          </div>
        </label>
      );
    }
  };

  var AgentsTableHeader = {

    controller: function (args) {

      var currentlySortedOn = function () {
        return s.defaultToIfBlank(m.route.param('sortBy'), 'agentState');
      };

      var currentlyOrderdOn = function () {
        return s.defaultToIfBlank(m.route.param('orderBy'), 'asc');
      };

      function tableSortedOnAttribute(attrName) {
        return currentlySortedOn() === attrName;
      }

      return {
        sortClass: function (attrName) {
          return tableSortedOnAttribute(attrName) ? currentlyOrderdOn() : '';
        },

        toggleSortingOrder: function (attrName) {
          var sortingOrder = 'asc';

          if (tableSortedOnAttribute(attrName) && currentlyOrderdOn() === 'asc') {
            sortingOrder = 'desc';
          }

          args.sortBy(attrName, sortingOrder);
        }
      };
    },

    view: function (ctrl, args) {
      var selectAllAgentsCheckbox;
      if (args.isUserAdmin) {
        selectAllAgentsCheckbox = (
          <input type="checkbox"
                 class="select-agent"
                 checked={args.checkboxValue()}
                 onclick={m.withAttr('checked', args.onCheckboxClick)}/>
        );
      }
      return (
        <thead>
        <tr>
          <th>
            {selectAllAgentsCheckbox}
          </th>
          <th>
            <SortHeaderWidget attrName='hostname' attrLabel='Agent Name' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attrName='sandbox' attrLabel='Sandbox' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attrName='operatingSystem' attrLabel='OS' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attrName='ipAddress' attrLabel='IP Address' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attrName='agentState' attrLabel='Status' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attrName='freeSpace' attrLabel='Free Space' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attrName='resources' attrLabel='Resources' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
          <th>
            <SortHeaderWidget attrName='environments' attrLabel='Environments' sortBy={args.sortBy}
                              sortClass={ctrl.sortClass}
                              toggleSortingOrder={ctrl.toggleSortingOrder}/>
          </th>
        </tr>
        </thead>
      );
    }
  };

  return AgentsTableHeader;
});
