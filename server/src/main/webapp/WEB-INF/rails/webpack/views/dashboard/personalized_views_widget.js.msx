/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import m from "mithril";
import {ScrollableViewTabs} from "views/dashboard/scrollable_view_tabs";
import {Editor} from "views/dashboard/personalization_editor";
import {ActionableMessage} from "views/dashboard/actionable_message";
import {TabsListDropdown} from "views/dashboard/tabs_list_dropdown";

export const PersonalizedViewsWidget = {
  oninit(vnode) {
    const vm = vnode.attrs.vm;
    if (!vm.canonicalCurrentName()) { vm.currentView("Default"); }
  },

  view(vnode) {
    const vm = vnode.attrs.vm;
    const doAddView = vm.actionHandler(() => !vm.locked() && Editor.open({}, vm.model, vm, vnode.attrs.onchange));

    return <div class={vm.loadingView() ? "dashboard-tabs loading" : "dashboard-tabs"}>
      <ActionableMessage vm={vm} />
      <ScrollableViewTabs vm={vm} />
      <AddTab onclick={doAddView} />
      <TabsListDropdown vm={vm} />
    </div>;
  }
};

const AddTab = {
  view(vnode) {
    return <button class="add-tab" {...vnode.attrs} title="Add a view">
      <i class="icon_add" />
    </button>;
  }
};
