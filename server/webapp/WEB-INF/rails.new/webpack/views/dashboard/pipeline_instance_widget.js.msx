/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m                     = require('mithril');
const StagesInstanceWidget  = require('views/dashboard/stages_instance_widget');
const MaterialChangesWidget = require('views/dashboard/material_changes_widget');

const PipelineInstanceWidget = {
  oninit: (vnode) => {
    const self = vnode.state;

    self.toggleChanges = (e) => {
      const dropdown     = vnode.attrs.dropdown;
      const pipelineName = vnode.attrs.pipelineName;
      dropdown.create(pipelineName);
      dropdown.toggleDropDownState(pipelineName);
      e.stopPropagation();
    };
  },

  view: (vnode) => {
    const ctrl         = vnode.state;
    const instance     = vnode.attrs.instance;
    const dropdown     = vnode.attrs.dropdown;
    const pipelineName = vnode.attrs.pipelineName;
    return (
      <div class="pipeline-instance">
        <div class="instance-label">Instance: {instance.label} </div>
        <div class="more-info">
          <ul class="info">
            <li><a href={instance.comparePath}> Compare </a></li>
            <li><a onclick={ctrl.toggleChanges}><span class="changes"> Changes</span> </a></li>
            <li><a href={instance.vsmPath}> VSM </a></li>
          </ul>
          <MaterialChangesWidget materialRevisions={instance.materialRevisions}
                                 isChangeVisible={dropdown.isDropDownOpen(pipelineName)}/>
        </div>
        <div class="instance-details">
          <div>{instance.triggeredBy}</div>
          <div>on {instance.scheduledAt.toString()}</div>
        </div>
        <div class="latest-stage">
          {instance.latestStageInfo()}
        </div>
        <StagesInstanceWidget stages={instance.stages}/>
      </div>
    );
  }
};

module.exports = PipelineInstanceWidget;
