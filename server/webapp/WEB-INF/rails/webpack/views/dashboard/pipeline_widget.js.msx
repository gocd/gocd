/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const m = require('mithril');
const _ = require('lodash');

const PipelineInstanceWidget = require('views/dashboard/pipeline_instance_widget');
const PipelineHeaderWidget   = require('views/dashboard/pipeline_header_widget');

const PipelineWidget = {
  view: (vnode) => {
    const pipeline = vnode.attrs.pipeline;
    let pipelineInstances;

    if (pipeline.instances.length) {
      pipelineInstances = _.map(pipeline.instances, (instance) => {
        return (
          <PipelineInstanceWidget instance={instance}
                                  dropdown={vnode.attrs.dropdown}
                                  buildCause={vnode.attrs.buildCause}
                                  key={instance.counter}
                                  pipelineName={pipeline.name}
                                  trackingTool={pipeline.trackingTool}/>
        );
      });
    } else {
      pipelineInstances = (<div class="no_instance">
        <p>You haven't run this pipeline yet. Click the play button to run pipeline.</p>
      </div>);
    }

    return (
      <li class="dashboard-group_pipeline">
        <div class="pipeline">
          <PipelineHeaderWidget pipeline={vnode.attrs.pipeline}
                                invalidateEtag={vnode.attrs.invalidateEtag}
                                doCancelPolling={vnode.attrs.doCancelPolling}
                                doRefreshImmediately={vnode.attrs.doRefreshImmediately}
                                pluginsSupportingAnalytics={vnode.attrs.pluginsSupportingAnalytics}
                                shouldShowAnalyticsIcon={vnode.attrs.shouldShowAnalyticsIcon}
                                operationMessages={vnode.attrs.operationMessages}/>
          <div className="pipeline_instances">
            {pipelineInstances}
          </div>

        </div>
      </li>
    );
  }
};

module.exports = PipelineWidget;
