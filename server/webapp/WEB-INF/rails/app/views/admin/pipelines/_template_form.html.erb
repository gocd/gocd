<div id="select_template_container">
  <%= error_message_on(scope[:pipeline], com.thoughtworks.go.config.PipelineConfig::TEMPLATE_NAME, :css_class => "error") %>
  <%- if scope[:template_list].size() == 0 %>
      <div class="<%= scope[:pipeline].errors().on(com.thoughtworks.go.config.PipelineConfig::TEMPLATE_NAME).nil? ? "information" : "warnings" %>">There are no templates configured or you are unauthorized to view the existing templates. Add one via the <%= link_to "templates page", templates_path %>.</div>
  <% else %>
      <div class="fieldset">
        <div class="form_item">
          <%= scope[:form].label 'Template' %>
          <%- scope[:template_names] = scope[:template_list].map() { |template_view_model| template_view_model.getTemplate().name() } -%>
          <%= scope[:form].select(com.thoughtworks.go.config.PipelineConfig::TEMPLATE_NAME, scope[:template_names], {:selected => scope[:pipeline].getTemplateName()}, {:id => "select_template"}) %>
          <span id="links"/>
        </div>

        <%- scope[:name_body_map] = scope[:template_list].inject({}) do |map, template| %>
            <%- scope[:dom_container_id] = random_dom_id("template_body_") -%>
            <textarea class="hidden" id="<%= scope[:dom_container_id] -%>">
                    <%- if template.getTemplate().referredParams().size() > 0 %>
                        <label>Define Parameters</label>
                  <%- template.getTemplate().referredParams().each do |param| -%>
                            <div>
                                <%= scope[:form].fields_for "params", param, :index => "" do |form| %>
                                    <%= form.text_field :name, :class => "", :id => nil, :readonly => true -%>
                                  <span class="equals_sign">=</span>
                                  <%= form.text_field :valueForDisplay, :class => "", :id => nil -%>
                                <% end %>
                            </div>
                        <%- end -%>
                    <% end %>
                </textarea>
            <%- map.merge(template.getTemplate().name() => scope[:dom_container_id]) -%>
        <%- end -%>
        <div id="used_params">
        </div>
      </div>
      <script type="text/javascript">
        Util.on_load(function () {
          var callback          = Util.domUpdatingCallback(<%== scope[:name_body_map].to_json %>, jQuery('#used_params'), function () {
            return this.value;
          });
          var template_selector = jQuery('#select_template');
          template_selector.change(callback);
          callback.apply(template_selector.get(0));


          setViewLink();
          template_selector.change(function () {
            setViewLink()
          });

          function setViewLink() {
            var template_map = <%== scope[:template_list].inject({})  {|memo, template_view_model | memo[template_view_model.getTemplate().name().to_s] = {canView: template_view_model.isAuthorizedToViewTemplate(), canEdit: template_view_model.isAuthorizedToEditTemplate()}; memo}.to_json %>;
            viewAndEditAssociatedTemplate("#select_template").addViewAndEditTemplateLinks(template_map, "<%= config_view_templates_show_path(:name => "__template_name__") %>", "<%= template_edit_path(:pipeline_name => "__template_name__" ,:stage_parent => "templates", :current_tab => 'general') %>");
          }
        });
      </script>
  <% end %>
</div>
