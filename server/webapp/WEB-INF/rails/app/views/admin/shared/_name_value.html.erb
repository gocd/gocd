<div class="form_content">
    <div class="environment_variables_section popup_form">
        <% template_row_id_prefix = scope[:collection_name].to_s + (scope[:secure] ? "_secure" : "") %>
        <textarea id="<%=template_row_id_prefix-%>_variables_template" class="template">
            <%= scope[:form].fields_for scope[:collection_name], :index => "" do |var_form| %>
                <td class="name_value_cell">
                    <%= var_form.text_field :name, :class => "form_input environment_variable_name", :id => nil -%>
                </td>
                <td class="name_value_cell">
                    <span class="equals_sign"><%= l.string("EQUALS_SIGN") -%></span>
                </td>
                <td class="name_value_cell">
                    <div>
                        <% if scope[:secure] %>
                            <%= var_form.password_field :valueForDisplay, :class => "form_input environment_variable_value", :id => nil -%>
                            <%= hidden_field_tag "#{scope[:form].object_name}[#{scope[:collection_name]}][][secure]", true %>
                            <%= hidden_field_tag "#{scope[:form].object_name}[#{scope[:collection_name]}][][#{com.thoughtworks.go.config.EnvironmentVariableConfig::ISCHANGED}]", true%>
                        <% else %>
                            <%= var_form.text_field :valueForDisplay, :class => "form_input environment_variable_value", :id => nil -%>
                        <% end %>
                    </div>

                </td>
                <td class="name_value_cell">
                    <span class="icon_remove delete_parent"></span>
                </td>
            <% end %>
        </textarea>
        <table class="<%= scope[:collection_name] -%>">
            <thead>
            <tr >
                <th>Name</th>
                <th></th>
                <th>Value</th>
                <th></th>
            </tr>
            </thead>
            <tbody class="<%= scope[:collection_name] -%>" id="<%=template_row_id_prefix-%>">
            <% scope[:collection].each do |variable| -%>
                <%= scope[:form].fields_for scope[:collection_name], variable, :index => "" do |var_form| %>
                    <tr>
                        <td class="name_value_cell">
                            <%= var_form.text_field :name, :class => "form_input environment_variable_name", :id => nil -%>
                            <%= error_message_on(variable, com.thoughtworks.go.config.EnvironmentVariableConfig::NAME, :css_class => "name_value_error") %>
                            <%= hidden_field_tag "#{scope[:form].object_name}[#{scope[:collection_name]}][][original_name]", variable.getName() %>
                        </td>
                        <td class="name_value_cell">
                            <span class="equals_sign"><%= l.string("EQUALS_SIGN") -%></span>
                        </td>
                        <td class="name_value_cell">
                            <div>
                                <% if scope[:secure] %>
                                    <%
                                       secure_variable_value_field_class_name = random_dom_id("secure_variable")
                                       secure_variable_hidden_field_class_name = random_dom_id("secure_variable")
                                       secure_variable_is_changed_class_name = random_dom_id("secure_variable")
                                       secure_variable_action_class_name = random_dom_id("secure_variable")
                                    %>
                                    <%= var_form.password_field :valueForDisplay, :class => "form_input environment_variable_value #{secure_variable_value_field_class_name}", :id => nil, :readonly => 'readonly'-%>
                                    <%= hidden_field_tag("pipeline[variables][][originalValue]", variable.getValueForDisplay(), :class => secure_variable_hidden_field_class_name) -%>
                                    <%= hidden_field_tag "#{scope[:form].object_name}[#{scope[:collection_name]}][][secure]", true %>
                                    <%= hidden_field_tag "#{scope[:form].object_name}[#{scope[:collection_name]}][][#{com.thoughtworks.go.config.EnvironmentVariableConfig::ISCHANGED}]", false, :class => secure_variable_is_changed_class_name %>
                                <% else %>
                                    <%= var_form.text_field :valueForDisplay, :class => "form_input environment_variable_value", :id => nil -%>
                                <% end %>

                                <%= error_message_on(variable, com.thoughtworks.go.config.EnvironmentVariableConfig::VALUE, :css_class => "name_value_error") %>
                            </div>
                        </td>
                        <% if scope[:secure] %>
                            <td class="name_value_cell cell_edit_reset_actions">
                                <%= link_to 'Edit', '#', :class => "edit #{secure_variable_action_class_name} skip_dirty_stop" -%>
                                <%= link_to 'Reset', '#', :class => "reset #{secure_variable_action_class_name} hidden skip_dirty_stop" -%>
                                <script type="text/javascript">
                                    jQuery(document).ready(function() {
                                        function toggle_reset(value, edit_link, reset_link) {
                                            edit_link.toggle(!value);
                                            reset_link.toggle(value);
                                        }

                                        var password_field = jQuery(".<%= secure_variable_value_field_class_name -%>");
                                        var edit_link = jQuery(".edit.<%= secure_variable_action_class_name -%>");
                                        var reset_link = jQuery(".reset.<%= secure_variable_action_class_name -%>");
                                        var is_changed_hidden_field = jQuery(".<%= secure_variable_is_changed_class_name -%>");
                                        jQuery(".edit.<%= secure_variable_action_class_name -%>").click(function(e) {
                                            password_field.removeAttr("readonly");
                                            is_changed_hidden_field.val(true);
                                            password_field.val('');
                                            password_field.focus();
                                            toggle_reset(true, edit_link, reset_link);
                                            e.preventDefault();
                                        });
                                        jQuery(".reset.<%= secure_variable_action_class_name -%>").click(function(e) {
                                            var hidden_field = jQuery(".<%= secure_variable_hidden_field_class_name -%>");
                                            password_field.attr("readonly", "readonly");
                                            password_field.val(hidden_field.val());
                                            is_changed_hidden_field.val(false);
                                            toggle_reset(false, edit_link, reset_link);
                                            e.preventDefault();
                                        });
                                    });
                                </script>
                            </td>
                        <% end %>
                        <td class="name_value_cell icon_remove_cell">
                            <span class="icon_remove delete_parent"></span>
                        </td>
                    </tr>
                <%- end -%>
            <%- end -%>
            </tbody>
        </table>
		<%= action_icon({:type => "add", :text => l.string("ADD"), :href => "#", :id => id="add_#{template_row_id_prefix}", :class => "skip_dirty_stop"}) %>
    </div>
</div>
<script type="text/javascript">
    Util.on_load(function() {
        function setupVarForm(finish_button) {
            var rowCreator = new EnvironmentVariables.RowCreator(jQuery('#<%=template_row_id_prefix-%>_variables_template'), 'tr', '.delete_parent');
            var variables = new EnvironmentVariables(
                    jQuery('tbody#<%=template_row_id_prefix-%>'),
                    rowCreator,
                    null,
                    function(inputs) {
                        inputs.dirty_form();
                    },
                    function(row) {
                        row.parents("form.dirtyform").data("dirty", true);
                    });

            variables.registerAddButton(jQuery("#add_<%=template_row_id_prefix-%>"))
            variables.addDefaultRow();
            variables.registerFinishButton(finish_button);
        }

        var finish_button = jQuery(".finish");
        setupVarForm(finish_button);
    });
</script>