
    <% if @failing_tests_error_message %>
        <span class="error"><%= @failing_tests_error_message %></span>
    <% elsif @failing_tests.numberOfTests() == 0 %>
        <h3>
            <span class="message"><%= l.string("There are tests configured in this stage but could not compute results.") %></span>
        </h3>
    <% elsif @stage.getState().equals(com.thoughtworks.go.domain.StageState::Passed) %>
        <h3>
            <div class="counts">
                <span class="total"><%= l.string("Tests Run: X", [@failing_tests.numberOfTests()]) %></span>
                <span class="failures"><%= l.string("TOTAL_FAILURES_COUNT", [@failing_tests.totalFailureCount()]) %></span>
                <span class="errors"><%= l.string("TOTAL_ERRORS_COUNT", [@failing_tests.totalErrorCount()]) %></span>
            </div>
            <% if @failing_tests.totalFailureCount() > 0 || @failing_tests.totalErrorCount() > 0 %>
                <div class="message"><%= l.string("THE_STAGE_PASSED_WITH_WARNING") %></div>
                <div class="message"><%= l.string("THE_STAGE_PASSED_WITH_WARNING_FIX") %></div>
            <% else %>
                <span class="message"><%= l.string("THE_STAGE_PASSED") %></span>
            <% end %>
        </h3>
    <% else %>
        <h3>
            <div class="counts">
                <span class="total"><%= l.string("Tests Run: X", [@failing_tests.numberOfTests()]) %></span>
                <span class="failures"><%= l.string("TOTAL_FAILURES_COUNT", [@failing_tests.totalFailureCount()]) %></span>
                <span class="errors"><%= l.string("TOTAL_ERRORS_COUNT", [@failing_tests.totalErrorCount()]) %></span>
            </div>
            <span class="message"><%= l.string("New Tests Broken Since:") %> <span class="secondary">(<%= l.string("ordered by check-in/material time") %>)</span></span>
        </h3>
        <ol>
            <% @failing_tests.failingTestsInPipelines().each_with_index do |pipeline_in_non_passing_tests, idx_in_non_passing_tests| %>
                <li class="failing_pipeline" id="failing_pipeline<%= idx_in_non_passing_tests %>">
                    <div class="pipeline_bar">
                        <div class="counts secondary">
                            <span class="failures"><%= l.string("UNIQUE_FAILURES_COUNT", [pipeline_in_non_passing_tests.failureCount()]) %></span>
                            <span class="errors"><%= l.string("UNIQUE_ERRORS_COUNT", [pipeline_in_non_passing_tests.errorCount()]) %></span></div>
                        <div class="color_code Failed"></div>
                        <div class="pipeline_details">
                            <span class="pipeline_label secondary"><%= l.string("Pipeline Label:") %> <%= pipeline_in_non_passing_tests.getLabel() %></span>
                            <% scope[:changes_button_id] = build_cause_popup_id_for_pipeline_counter(pipeline_in_non_passing_tests.getCounter(), "changes_button_") -%>
                            <span class="changes_button_wrapper">
                                <%= link_to(l.string("CHANGES"), build_cause_path(:pipeline_name => @stage.getIdentifier().getPipelineName(), :pipeline_counter => pipeline_in_non_passing_tests.getCounter()), :id => scope[:changes_button_id], :class => "show_panel submit_small fbh_build_cause_button") -%>
                            </span>
                        </div>
                        <script type="text/javascript">
                            Util.namespace('fbh_build_cause_urls').set('<%= scope[:changes_button_id] -%>', '<%= build_cause_path(:pipeline_name => params[:pipeline_name], :pipeline_counter => pipeline_in_non_passing_tests.getCounter()) -%>');
                        </script>
                    </div>
                    <%unless pipeline_in_non_passing_tests.users().empty?%>
                        <div class="users">By <%=pipeline_in_non_passing_tests.users().join(", ")%></div>
                    <%end%>
                    <div class="block_to_hide_or_reveal_by_above_pipeline_bar">
                        <%if pipeline_in_non_passing_tests.failingSuites().empty?%>
                            These changes did not break any of the currently failing tests.
                        <%end%>
                        <% pipeline_in_non_passing_tests.failingSuites().each do |suite_in_non_passing_tests| %>
                            <div class="suite"><%= l.string("Suite:") %> <span class="suite_name"><%= suite_in_non_passing_tests.fullName() -%></span></div>
                            <table class="test_suite">
                                <tr>
                                    <td colspan="3">

                                    </td>
                                </tr>
                                <%
                                   scope[:row] = 0;
                                   suite_in_non_passing_tests.tests().each do |test_in_non_passing_tests|
                                       scope[:row_class] = ""
                                       scope[:row_class] = "alt_row" unless scope[:row] %2 != 0
                                       scope[:row] = scope[:row] + 1
                                %>
                                    <tr class="test_case <%= scope[:row_class] %>">
                                        <td class="test_status">
                                            <div class="<%= test_in_non_passing_tests.getStatus() %>">&nbsp;</div>
                                        </td>
                                        <td class="test_name">
                                            <span class="name"><%= test_in_non_passing_tests.getName() %></span>
                                                <span class="jobs">
                                                    (<%== test_in_non_passing_tests.getJobs().map do |job_identifier_in_non_passing_tests|
                                                        fbh_failure_detail_popup_id_for_failure(job_identifier_in_non_passing_tests, suite_in_non_passing_tests.fullName(), test_in_non_passing_tests.getName())
                                                        link_to(job_identifier_in_non_passing_tests.getBuildName(), url_for_job_identifier(job_identifier_in_non_passing_tests)) + failure_details_link(job_identifier_in_non_passing_tests, suite_in_non_passing_tests.fullName(), test_in_non_passing_tests.getName())
                                                     end.join(",") %>)
                                            </span>
                                        </td>
                                    </tr>
                                <% end %>
                            </table>
                        <% end %>
                    </div>
                </li>
            <% end %>
        </ol>
    <% end %>

