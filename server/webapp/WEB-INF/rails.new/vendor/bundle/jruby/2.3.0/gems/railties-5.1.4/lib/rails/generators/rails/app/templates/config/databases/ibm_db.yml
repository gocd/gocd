# IBM Dataservers
#
# Home Page
#   https://github.com/dparnell/ibm_db
#
# To install the ibm_db gem:
#
#   On Linux:
#       . /home/db2inst1/sqllib/db2profile
#       export IBM_DB_INCLUDE=/opt/ibm/db2/V9.7/include
#       export IBM_DB_LIB=/opt/ibm/db2/V9.7/lib32
#       gem install ibm_db
#
#   On Mac OS X 10.5:
#       . /home/db2inst1/sqllib/db2profile
#       export IBM_DB_INCLUDE=/opt/ibm/db2/V9.7/include
#       export IBM_DB_LIB=/opt/ibm/db2/V9.7/lib32
#       export ARCHFLAGS="-arch i386"
#       gem install ibm_db
#
#   On Mac OS X 10.6:
#       . /home/db2inst1/sqllib/db2profile
#       export IBM_DB_INCLUDE=/opt/ibm/db2/V9.7/include
#       export IBM_DB_LIB=/opt/ibm/db2/V9.7/lib64
#       export ARCHFLAGS="-arch x86_64"
#       gem install ibm_db
#
#   On Windows:
#       Issue the command: gem install ibm_db
#
# Configure Using Gemfile
# gem 'ibm_db'
#
#
default: &default
  adapter: ibm_db
  pool: <%%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: db2inst1
  password:
  #schema: db2inst1
  #host: localhost
  #port: 50000
  #account: my_account
  #app_user: my_app_user
  #application: my_application
  #workstation: my_workstation
  #security: SSL
  #timeout: 10
  #authentication: SERVER
  #parameterized: false

development:
  <<: *default
  database: <%= app_name[0,4] %>_dev

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: <%= app_name[0,4] %>_tst

# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="ibm-db://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: <%= app_name %>_production
  username: <%= app_name %>
  password: <%%= ENV['<%= app_name.upcase %>_DATABASE_PASSWORD'] %>
