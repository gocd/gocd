<% pipeline_to_be_deleted_name = scope[:pipeline].name() %>
<% unique_id_for_pipeline = random_dom_id("delete_pipeline_") %>
<%= form_for scope[:pipeline], :as => :pipeline, :url => {:action => "destroy", :pipeline_name => pipeline_to_be_deleted_name}, :html => {:id => "#{unique_id_for_pipeline}_form", :method => :delete} do |f| %>
    <%= md5_field %>
    <% can_delete =  scope[:pipeline_to_can_delete][pipeline_to_be_deleted_name]
       message = can_delete.message()
    -%>
    <% if !can_delete.canDelete() %>
        <span class="action_icon delete_icon_disabled" title="<%= message -%>">
        	Delete
        </span>
    <% else %>
    <span class="delete_icon action_icon delete_parent" id="trigger_<%= unique_id_for_pipeline %>" title="<%= message -%>">
        <%= link_to 'Delete', "#" %>
        <%= render :partial => 'admin/shared/submit_with_prompt.html', :locals => {:scope => {:button_id => "trigger_#{unique_id_for_pipeline}", :message => "Are you sure you want to delete the pipeline '#{pipeline_to_be_deleted_name}'? Pipeline history will not be removed from the database and artifacts will not be removed from storage, which may cause conflicts if a pipeline with the same name is later re-created.", :on_confirmation_js => "$('#{"#{unique_id_for_pipeline}_form"}').submit()"}} %>
    </span>
    <% end %>
<% end %>
