<%- @view_title = "Agents" -%>
<div class="page_header" style='overflow:inherit;'>
  <div class="row">
  <h1 class="entity_title">Agents</h1>

  <%= link_to "Check out the new agents page", agents_path, :class => 'agents-toggle-new-view' %>

  <%= render :partial => "agents/agent_filter.html" -%>


  <% if has_operate_permission_for_agents? %>
      <div class="edit_panel" id="dd_ajax_float" style='float:right;'>
        <%= form_tag(edit_agents_path(:filter => params[:filter], :column => params[:column], :order => params[:order]), :id => 'agents_form') -%>
        <input id="agent_edit_operation" type="hidden" name="operation"/>

        <div style="display: none" id="actual_agent_selectors">
          <%= render :partial => "agents/hidden_selectors", :locals => {:scope => {:agents => @agents}} -%>
        </div>

        <%== submit_button("Enable", :onclick_lambda => "Util.set_value('agent_edit_operation', 'Enable')", :name => "Enable") %>
        <%== submit_button("Disable", :onclick_lambda => "Util.set_value('agent_edit_operation', 'Disable')", :name => "Disable") %>
        <%== submit_button("Delete", :onclick_lambda => "Util.set_value('agent_edit_operation', 'Delete')", :name => "Delete") %>

        <%== submit_button("Resources", :id => "show_resources_panel", :class => "show_panel", :type => "select", :text_color => "dark") %>

        <div id="resources_panel" class="hidden resources_panel agent_edit_popup enhanced_dropdown">
          <div class='resources_selector scrollable_panel'>
            <div class="loading"></div>
          </div>
          <div class="add_panel hidden">
            <input type="text" name="add_resource" class='new_resource new_field'/>
            <%== submit_button("Add", :class => "apply_resources apply_button submit_small primary", :name => "resource_operation") %>

            <div class="validation_message error hidden">Invalid character. Please use a-z, A-Z, 0-9, fullstop, underscore, hyphen and pipe.</div>
          </div>
          <div class="no_selection_error error hidden">Please select one or more agents first.</div>
        </div>


        <%== submit_button("Environments", :id => "show_environments_panel", :class => "show_panel", :type => "select", :text_color => "dark") %>

        <div id="environments_panel" class="hidden environments_panel agent_edit_popup enhanced_dropdown">
          <div class='environments_selector scrollable_panel'>
            <div class="loading"></div>
          </div>
          <div class="add_panel hidden">
            <%== submit_button("Apply", :class => "submit_small primary apply_button", :name => "Apply", :onclick_lambda => "Util.set_value('agent_edit_operation', 'Apply_Environment')") %>
          </div>
          <div class="no_selection_error error hidden">Please select one or more agents first.</div>
          <div class="no_environments_error error hidden">No environments are defined.</div>
        </div>
        <script type="text/javascript">
          Util.on_load(function () {
            var environmentPanel       = new MicroContentPopup($('environments_panel'), new EditPopupHandler.AddOnlyHandler('<%= url_for(:action => 'environment_selector') %>', $('agents_form'), Util.are_any_rows_selected('.agents .agent_select')));
            var environmentPanelShower = new MicroContentPopup.ClickShower(environmentPanel);
            environmentPanelShower.bindShowButton($('show_environments_panel'), jQuery('.page_header').get(0));
          });
        </script>

        <%= end_form_tag %>
      </div>
  <% end %>

</div>
</div>
<%= content_wrapper_tag %>
<div class="row">
<% if has_operate_permission_for_agents? %>
    <div id="agents_form_container">
      <div id="ajax_agents_header" class="clear_float">
        <%= render :partial => "agents_header", :locals => {:scope => {}} %>
      </div>
    </div>



    <script type="text/javascript">
      Util.on_load(function () {
        var resource_panel_callback_handler = new EditPopupHandler.AddEditHandler('<%= url_for(:action => 'resource_selector') %>', $('agents_form'), Util.are_any_rows_selected('.agents .agent_select'), AgentUtil.validate_resource_name, 'agent_edit_operation', 'Apply_Resource', 'Add_Resource');
        var resource_panel                  = new MicroContentPopup($('resources_panel'), resource_panel_callback_handler);
        var resource_panel_shower           = new MicroContentPopup.ClickShower(resource_panel);
        resource_panel_shower.bindShowButton($('show_resources_panel'), jQuery('.page_header').get(0));
        resource_panel_callback_handler.setDefaultText($$('.new_resource')[0], "Create New");
      });
    </script>
<% end %>


<div id="ajax_agents_table" class='agents_table'>
  <%= render :partial => "agents_table", :locals => {:scope => {}} %>
</div>
</div>
<%= end_content_wrapper %>

<script type="text/javascript">

  Util.on_load(function () {
    var replicator                    = new FieldStateReplicator();
    var replicated_checkbox_group_ids = ['ajax_agents_table', 'actual_agent_selectors'];

    function checkbox_replicator_id_reader(elem) {
      return elem.value;
    }

    for (var i = 0; i < replicated_checkbox_group_ids.length; i++) {
      replicator.register_all_matching($(replicated_checkbox_group_ids[i]), '.agent_select', checkbox_replicator_id_reader);
    }
    <% if auto_refresh? %>
    AjaxRefreshers.addRefresher(new AgentsAjaxRefresher('<%= url_for(:action => 'index', :format=>"json", :column=>params[:column], :order=>params[:order], :filter=>params[:filter] ) %>', '<%= url_for_login %>', replicator, replicated_checkbox_group_ids, checkbox_replicator_id_reader));
    <% end %>

    $('agents_form').observe("keydown", function (evt) {
      if (evt.keyCode == Event.KEY_RETURN) {
        evt.stop();
        return false;
      }
      return true;
    });
  });
</script>
<script type="text/javascript">
  Util.on_load(function () {
    jQuery(document).ready(function ($) {
      var filterHelp       = jQuery('#filter_help');
      var filterTextOffset = jQuery('#filter_text').offset();
      filterHelp.css('top', 32).css('left', filterTextOffset.left);
    });
  });
</script>