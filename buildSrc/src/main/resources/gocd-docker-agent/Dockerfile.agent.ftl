# Copyright 2018 ThoughtWorks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################################################################
# This file is autogenerated by the repository at https://github.com/gocd/docker-gocd-agent.
# Please file any issues or PRs at https://github.com/gocd/docker-gocd-agent
###############################################################################################

FROM alpine:latest as gocd-agent-unzip
COPY go-agent-${fullVersion}.zip /tmp/go-agent-${fullVersion}.zip
RUN unzip /tmp/go-agent-${fullVersion}.zip -d /
RUN mv /go-agent-${goVersion} /go-agent

FROM ${distro.name()}:${distroVersion.releaseName}
MAINTAINER ThoughtWorks, Inc. <support@thoughtworks.com>

LABEL gocd.version="${goVersion}" \
  description="GoCD agent based on ${distro.name()} version ${distroVersion.version}" \
  maintainer="ThoughtWorks, Inc. <support@thoughtworks.com>" \
  url="https://www.gocd.org" \
  gocd.full.version="${fullVersion}" \
  gocd.git.sha="${gitRevision}"

<#list additionalFiles as filePath, fileDescriptor>
ADD ${fileDescriptor.url} ${filePath}
</#list>

# force encoding
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
<#list distro.environmentVariables as key, value>
ENV ${key}="${value}"
</#list>

ARG UID=1000
ARG GID=1000

RUN \
<#if additionalFiles?size != 0>
# add mode and permissions for files we added above
  <#list additionalFiles as filePath, fileDescriptor>
  chmod ${fileDescriptor.mode} ${filePath} && \
  chown ${fileDescriptor.owner}:${fileDescriptor.group} ${filePath} && \
  </#list>
</#if>
# add our user and group first to make sure their IDs get assigned consistently,
# regardless of whatever dependencies get added
<#list distro.createUserAndGroupCommands as command>
  ${command} && \
</#list>
<#list distro.installPrerequisitesCommands as command>
  ${command} && \
</#list>
<#list distro.getInstallJavaCommands(project) as command>
  ${command} && \
</#list>
  mkdir -p /docker-entrypoint.d

COPY --from=gocd-agent-unzip /go-agent /go-agent
# ensure that logs are printed to console output
COPY agent-bootstrapper-logback-include.xml agent-launcher-logback-include.xml agent-logback-include.xml /go-agent/config/

<#if distro.name() == "docker">
ADD run-docker-daemon.sh /
</#if>
ADD docker-entrypoint.sh /

ENTRYPOINT ["/docker-entrypoint.sh"]
