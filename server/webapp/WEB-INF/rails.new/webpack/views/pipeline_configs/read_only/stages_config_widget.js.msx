/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const m                     = require('mithril');
const _                     = require('lodash');
const f                     = require('helpers/form_helper');
const Stream                = require('mithril/stream');
const ComponentMixins       = require('helpers/mithril_component_mixins');
const StageDefinitionWidget = require('views/pipeline_configs/read_only/stage_definition_widget');

const StagesConfigWidget = {
  oninit (vnode) {
    const self = this;
    ComponentMixins.HasViewModel.call(this);
    self.currentSelection = Stream(vnode.attrs.stages().firstStage());
  },

  view (vnode) {
    const classes = function (selection, additionalClasses) {
      return _(['pipeline-flow-box', additionalClasses, (vnode.state.currentSelection() === selection) ? 'active' : null]).flatten().compact().value().join(' ');
    };

    return (
      <div class="template-stages">
        <div class="stage-boxes">
          <div class="stages-wrapper">
            {vnode.attrs.stages().mapStages((stage, stageIndex) => {
              return (
                <div class={classes(stage, 'stage')}
                     data-stage-index={stageIndex}
                     onclick={vnode.state.currentSelection.bind(vnode.state, stage)}
                     key={stage.uuid()}>
                  <span class="drag-handle"/>
                  <span class='label'>{stage.name()}</span>
                </div>
              );
            })}
          </div>
          <StageDefinitionWidget stages={vnode.attrs.stages}
                                 pluginInfos={vnode.attrs.pluginInfos}
                                 currentSelection={vnode.state.currentSelection}
                                 vm={vnode.state.vmState('stagesConfig')}/>
        </div>
      </div>
    );
  }
};

module.exports = StagesConfigWidget;
