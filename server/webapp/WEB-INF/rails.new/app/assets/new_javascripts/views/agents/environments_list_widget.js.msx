/*
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

define(['mithril', 'lodash', 'helpers/form_helper',
  'views/agents/tri_state_checkbox_widget',
  'models/agents/environments'
], function (m, _, f, TriStateCheckboxWidget, Environments) {

  var EnvironmentsListWidget = {
    controller: function (args) {
      return {
        updateEnvironments: function (callback) {
          function hideEnvironmentsDropDown() {
            args.hideDropDown('environment');
          }

          hideEnvironmentsDropDown();

          var environmentsToBeAdded = _.filter(Environments.list, function (environment) {
            return environment.isChecked();
          }).map(function (environment) {
            return environment.name();
          });

          var environmentsToBeRemoved = _.filter(Environments.list, function (environment) {
            return !environment.isIndeterminate() && !environment.isChecked();
          }).map(function (environment) {
            return environment.name();
          });

          callback(environmentsToBeAdded, environmentsToBeRemoved);
        },

        closeDropdown:      function () {
          args.dropDownReset(false);
        }
      };
    },

    view: function (ctrl, args) {
      var isEnvironmentsEmpty = function () {
        return _.isEmpty(Environments.list);
      };

      var environmentDropDownClass = function () {
        return "agent-button-group-dropdown env-dropdown " + (isEnvironmentsEmpty() ? "empty" : "");
      };

      return (
        <div class={environmentDropDownClass()} onclick={ctrl.closeDropdown}>
          <ul class="resources-items">
            { _.map(Environments.list, function (environment, index) {
              return (<TriStateCheckboxWidget triStateCheckbox={environment} index={index} key={environment.name()}/>);
            })
            }
          </ul>

          {isEnvironmentsEmpty() ? (<span class="no-environment">No environments are defined</span>) :
            <f.button data-toggle="environments-list" class="btn-apply"
                      onclick={ctrl.updateEnvironments.bind(ctrl, args.onEnvironmentsUpdate)}>
              Apply
            </f.button>
          }
        </div>
      );
    }
  };

  return EnvironmentsListWidget;
});
