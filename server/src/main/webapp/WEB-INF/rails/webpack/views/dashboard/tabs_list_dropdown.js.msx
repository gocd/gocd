/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import m from "mithril";
import _ from "lodash";

export const TabsListDropdown = {
  view(vnode) {
    const vm = vnode.attrs.vm;
    return <div class={vm.paged() ? "tabs-list-dropdown-widget paged" : "tabs-list-dropdown-widget"}>
      <ViewTabsDropdownToggle vm={vm}/>
      <AvailableTabs vm={vm} />
    </div>;
  }
};

const AvailableTabs = {
  view(vnode) {
    const vm = vnode.attrs.vm;
    if (vm.tabsListDropdownVisible()) {
      return m("ul", {class: "tabs-list"}, _.map(vm.tabs(), (tab) => <li
        key={tab.id}
        class={vm.active(tab.name) ? "current" : undefined}
        title={tab.name}
        aria-label={vm.active(tab.name) ? `${tab.name} is selected` : tab.name}
        tabIndex="0"
        onclick={(e) => { e.stopPropagation(); vm.activate(tab.name); }}>{tab.name}</li>));
    }
  }
};

const ViewTabsDropdownToggle = {
  view(vnode) {
    const vm = vnode.attrs.vm;
    function toggleTabsListDropdown(e) { e.stopPropagation(); vm.toggleTabsListDropdown(); }

    return <button class="tabs-list-dropdown-toggle" onclick={toggleTabsListDropdown} title="Views list">
      <i class="icon_tabs-list" />
    </button>;
  }
};
