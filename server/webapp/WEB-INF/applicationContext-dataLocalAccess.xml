<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018 ThoughtWorks, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!--
  - Application context definition for the data access layer.
  - Accessed by business layer objects defined in "applicationContext.xml"
  - (see web.xml's "contextConfigLocation").
  -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

  <context:annotation-config/>

  <context:component-scan base-package="com.thoughtworks.go.server.dao"/>
  <context:component-scan base-package="com.thoughtworks.go.server.transaction"/>
  <context:component-scan base-package="com.thoughtworks.go.server.persistence"/>
  <context:component-scan base-package="com.thoughtworks.go.server.database"/>
  <context:component-scan base-package="com.thoughtworks.go.server.util"/>
  <context:component-scan base-package="com.thoughtworks.go.server.cache"/>

  <import resource="propertyConfigurer.xml"/>
  <import resource="classpath*:optional-development-server-configurer.xml"/>

  <bean id="cache" class="com.opensymphony.oscache.base.Cache">
    <constructor-arg value="true"/>
    <!-- useMemoryCaching -->
    <constructor-arg value="false"/>
    <!-- unlimitedDiskCache -->
    <constructor-arg value="false"/>
    <!-- overflowPersistence -->
    <constructor-arg value="false"/>
    <!-- blocking -->
    <constructor-arg value="com.opensymphony.oscache.base.algorithm.LRUCache"/>
    <!-- algorithmClass -->
    <constructor-arg value="1000"/>
    <!-- capacity -->
  </bean>

  <!-- ========================= RESOURCE DEFINITIONS ========================= -->

  <!-- Local Apache Commons DBCP DataSource that refers to a combined database -->
  <!-- The placeholders are resolved from jdbc.properties through -->
  <!-- the PropertyPlaceholderConfigurer in applicationContext.xml -->
  <!-- Transaction manager for a single JDBC DataSource-->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="goDataSource"/>
  </bean>


  <bean id="transactionTemplate" class="com.thoughtworks.go.server.transaction.TransactionTemplate">
    <constructor-arg index="0">
      <bean class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"/>
      </bean>
    </constructor-arg>
  </bean>

  <!-- ========================= HIBERNATE ========================= -->

  <bean id="hibernateProperties" class="com.thoughtworks.go.server.database.HibernateProperties"/>
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="dataSource" ref="goDataSource"/>
    <property name="useTransactionAwareDataSource" value="true"/>
    <property name="mappingDirectoryLocations">
      <list>
        <value>classpath:/hibernate-mappings</value>
      </list>
    </property>
    <property name="hibernateProperties" ref="hibernateProperties"/>
    <property name="entityInterceptor">
      <bean class="com.thoughtworks.go.server.transaction.TransactionCacheInterceptor" lazy-init="true" />
    </property>
  </bean>

  <bean id="goTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
</beans>
